{"version":3,"sources":["services/firebase.js","helpers/auth.js","Components/Navbar.js","Components/Pages/Login.js","helpers/db.js","services/sha1.js","Components/Participant-Components/Participants-custom-hooks.js","Components/Participant-Components/AddParticipant.js","Components/Participant-Components/ParticipantListItem.js","Components/Participant-Components/ParticipantList.js","Components/Pages/CreateGroup.js","Components/Pages/CreateSubGroup.js","Components/Pages/Chat.js","Components/Presentational/TaskDescription/TaskDescription.js","Components/Presentational/NewTaskComment/NewTaskComment.js","Components/Presentational/TaskActivity/TaskActivity.js","Components/Presentational/TaskTodos/TaskTodos.js","Components/Presentational/TaskDelete/TaskDelete.js","Components/Presentational/TaskDetails/TaskDetails.js","Components/Presentational/Modal/Modal.js","Components/Presentational/TaskColumn/TaskColumn.js","Components/Presentational/NewTaskColumn/NewTaskColumn.js","Components/Presentational/TaskboardNavbar/TaskboardNavbar.js","helpers/utils.js","Components/Pages/Taskboard.js","Components/Pages/Profile.js","App.js","serviceWorker.js","index.js","img/icon.png"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","storageBucket","auth","db","database","storage","signup","email","password","userName","createUserWithEmailAndPassword","then","a","user","currentUser","sendEmailVerification","ref","uid","set","name","signin","signInWithEmailAndPassword","signInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","update","displayName","signInWithGitHub","GithubAuthProvider","logout","signOut","Navbar","id","className","src","Icon","alt","to","this","props","authenticated","onClick","Component","Login","state","error","loginError","signupError","forgotpwError","newpass","username","showForgot","handleChange","bind","handleSignIn","handleSignUp","handleForgotPass","handleUpdatePass","googleSignIn","githubSignIn","onLogin","onRegister","onForgot","event","setState","target","value","preventDefault","message","newPassword","currentuser","updatePassword","emailAddress","sendPasswordResetEmail","console","log","document","getElementById","classList","remove","setTimeout","add","style","height","autoComplete","onSubmit","TextField","required","label","onChange","InputProps","type","padding","icon","faGithub","size","faGoogle","display","textAlign","createTaskboard","userId","groupId","push","description","createdBy","createdTimestamp","Date","now","taskboard","getKey","deleteTaskboard","taskboardId","updateTaskboard","createTaskColumn","boardId","deleteTaskColumn","deletedTimestamp","deleteTask","columnId","taskId","createTask","task","createTaskTodo","todo","updateTaskTodoStatus","todoId","isComplete","deleteTaskTodo","updateTaskColumn","newColumnId","oldColumnId","once","val","updateTask","updatedFields","createComment","comment","deleteComment","commentId","getUserById","Sha1","msg","options","opt","Object","assign","msgFormat","outFormat","str","TextEncoder","encode","reduce","prev","curr","String","fromCharCode","e","unescape","encodeURIComponent","utf8Encode","hexStr","replace","match","map","byte","parseInt","join","hexBytesToString","K","H","l","length","N","Math","ceil","M","Array","i","j","charCodeAt","pow","floor","W","t","ROTL","b","c","d","s","T","f","h","toString","slice","separator","x","y","z","n","useInputValue","initialValue","useState","inputValue","setInputValue","changeInput","clearInput","keyInput","callback","which","keyCode","useParticipants","participants","addParticipants","text","regist","setParticipants","concat","checked","registered","userExists","userID","addMembers","isMember","checkParticipants","idx","participant","index","removeParticipants","filter","AddParticipant","memo","Paper","margin","Grid","container","xs","md","item","paddingRight","placeholder","onInputChange","onKeyPress","onInputKeyPress","fullWidth","Button","variant","onButtonClick","ListItemMessage","source","ListItemText","primary","color","ParticipantListItem","shortenedString","substring","ListItem","divider","Checkbox","onCheckBoxToggle","ListItemSecondaryAction","IconButton","aria-label","ParticipantList","items","List","overflow","key","onItemRemove","onItemCheck","AddGroupParticipant","clearInputAndAddParticipant","userEx","users","k","v","AddGroupLeader","_","useStyles","makeStyles","theme","modal","alignItems","justifyContent","paper","position","width","minWidth","backgroundColor","palette","background","borderRadius","boxShadow","maxHeight","CreateGroup","classes","React","open","setOpen","savingGroup","setSavingGroup","saveError","setSaveError","groupName","setGroupName","groupDesc","setGroupDesc","leaders","setLeaders","Map","groups","setGroups","useEffect","on","snapshot","groups_temp","forEach","snap","off","handleClose","Fab","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","borderBottom","marginTop","inputProps","fontSize","marginBottom","role","marginLeft","marginRight","flexDirection","groupID","SHA1","hash","has","get","undefined","groupAccess","refreshGroups","fontWeight","border","borderColor","autoFocus","AddSubGroupParticipant","groupMembers","memberExists","AddSubGroupLeader","CreateSubGroup","subgroupName","setSubGroupName","subgroupDesc","setSubGroupDesc","subGroups","setSubgroups","members","setMembers","selectedGroupID","members_temp","Typography","selecteGroupName","subgroupID","allExists","membersExistInGroup","Chat","handleSelectGroup","selectedGroupName","selectedSubGroupName","chats","sort","timestamp","currentTarget","handleSelectSubGroup","selectedSubGroupID","handleCreateTaskboard","localStorage","setItem","history","usrGroups","usrSubGroups","boards","content","readError","writeError","loadingChats","handleSubmit","querySelector","groupsList","groupsTemp","keys","next","scrollTop","scrollHeight","prevProps","prevState","board","boardVal","subGroupsList","subGroups_temp","getDate","getMonth","getFullYear","getHours","getMinutes","faSearch","aria-hidden","overflowY","paddingBottom","from","values","result","FormControl","list","Select","labelId","displayEmpty","MenuItem","disabled","chat","profilePic","formatTime","onKeyDown","_handleKeyDown","faPaperPlane","withRouter","withStyles","TaskDescription","taskDetails","newDescription","setNewDescription","isEditing","setIsEditing","submitNewDescription","stopEditing","component","rows","faTimes","NewTaskComment","setText","submitComment","lastUpdatedTimestamp","TaskActivity","comments","setComments","usernameMap","setUsernameMap","tmpComments","unshift","tmpUsernameMap","Promise","all","err","alert","handleDeleteComment","moment","utc","fromNow","TaskTodos","newTodo","setNewTodo","todos","setTodos","completedTodosPercentage","setCompletedTodosPercentage","todosCount","todosCompleted","newList","newPercentage","toFixed","handleCreateTodo","handleUpdateTodoStatus","handleRemoveTodo","TaskDelete","close","handleDeleteTask","TaskDetails","newTaskName","setNewTaskName","isEditingTaskName","setIsEditingTaskName","submitNewTaskName","onBlur","Modal","closeModal","children","handleKeyDown","window","addEventListener","removeEventListener","TaskColumn","column","tasks","setTasks","newTask","setNewTask","selectedTaskId","setSelectedTaskId","tmpTasks","col","handleDeleteColumn","handleCreateTask","createdTimeStamp","handleMoveTask","targetListId","sourceListId","handleCloseModal","onDrop","sourceId","dataTransfer","getData","sourceEl","targetEl","sourceTaskListId","closest","targetTaskListId","handleDrop","onDragStart","setData","handleDragStart","onDragOver","handleDragOver","draggable","Card","CardContent","gutterBottom","NewTaskColumn","setName","handleCancelEditing","faPlus","TaskboardNavbar","isEditingTitle","setIsEditingTitle","newTitleText","setNewTitleText","titleText","setTitleText","handleDeleteTaskboard","saveNewTitle","faCheckCircle","faTimesCircle","faEdit","isEmptyObj","obj","Taskboard","taskboardData","setTaskboardData","isBoardLoaded","setIsBoardLoaded","columns","setColumns","setReadError","setUser","getItem","URLSearchParams","location","split","tmpCols","Text","Profile","handleimageChange","files","image","handlePhotoChange","put","progress","round","bytesTransferred","totalBytes","child","getDownloadURL","url","photoUrl","usernameEditable","emailEditable","passwordEditable","photoEditable","handleUsernameChange","handleUsernameCancel","handleEmailChange","handleEmailCancel","handlePasswordChange","handlePasswordCancel","handlePhotoStateChange","refreshUserDetails","usernameTemp","writeUserData","Error","emailTemp","updateEmail","passwordTemp","confirmPassTemp","errorMessage","evt","usernameTextRender","emailTextRender","passwordTextRender","crossRender","errorText","confirmPassword","passwordConfirmTextbox","photo","photoRender","borderWidth","defaultValue","max","charAt","data-v-d223ba98","focusable","data-prefix","data-icon","xmlns","viewBox","fill","PublicRoute","rest","render","PrivateRoute","pathname","App","loading","onAuthStateChanged","left","top","basename","path","Boolean","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.7ff0bfa1.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport \"firebase/storage\";\n\nconst config = {\n  apiKey: \"AIzaSyADjSvD59x-xPFvLQOlfBJQ0HyPrh9O_Hc\",\n  authDomain: \"ses2b-group2.firebaseapp.com\",\n  databaseURL: \"https://ses2b-group2.firebaseio.com\",\n  storageBucket: \"ses2b-group2.appspot.com\",\n};\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth;\nexport const db = firebase.database();\nexport const storage = firebase.storage();\n","import { auth } from \"../services/firebase\";\nimport { db } from \"../services/firebase\";\n\nexport function signup(email, password, userName) {\n  return auth()\n    .createUserWithEmailAndPassword(email, password)\n    .then(async function () {\n      const user = auth().currentUser;\n      user.sendEmailVerification();\n\n      await db.ref(\"users/\" + user.uid).set({\n        name: userName,\n        email: user.email,\n      });\n    });\n}\n\nexport function signin(email, password) {\n  return auth().signInWithEmailAndPassword(email, password);\n}\n\nexport function updatepass(newPassword) {\n  return auth().currentuser().updatePassword(newPassword);\n}\n\nexport function forgotpass(emailAddress) {\n  return auth()\n    .sendPasswordResetEmail(emailAddress)\n    .then(function () {\n      // Email sent.\n      console.log(\"Email Sent\");\n    });\n}\n\nexport function signInWithGoogle() {\n  const provider = new auth.GoogleAuthProvider();\n  return auth()\n    .signInWithPopup(provider)\n    .then(async function () {\n      const user = auth().currentUser;\n      await db.ref(\"users/\" + user.uid).update({\n        email: user.email,\n        name: user.displayName,\n      });\n    });\n}\n\nexport function signInWithGitHub() {\n  const provider = new auth.GithubAuthProvider();\n  return auth()\n    .signInWithPopup(provider)\n    .then(async function () {\n      const user = auth().currentUser;\n      await db.ref(\"users/\" + user.uid).update({\n        email: user.email,\n        name: user.displayName,\n      });\n    });\n}\n\nexport function logout() {\n  return auth().signOut();\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Navbar.scss\";\nimport Icon from \"../img/icon.png\";\nimport { logout } from \"../helpers/auth\";\n\nclass Navbar extends Component {\n  render() {\n    // console.log(window.location.pathname === \"/teams-ui/chat\")\n    // if (window.location.pathname === \"/teams-ui/login\"\n    //   || window.location.pathname === \"/teams-ui\") {\n    return (\n      <div id=\"navbar\">\n        <div className=\"nav\">\n          <img src={Icon} alt=\"Chat Bubble\"></img>\n          <div>Chat App</div>\n        </div>\n\n        <div className=\"links\">\n          <ul>\n            <li>\n              <Link to=\"/chat\">Groups</Link>\n            </li>\n            {!this.props.authenticated ? (\n              <li>\n                <Link to=\"/login\">Login</Link>\n              </li>\n            ) : (\n              \"\"\n            )}\n            {this.props.authenticated ? (\n              <li>\n                <Link to=\"/profile\">Profile</Link>\n              </li>\n            ) : (\n              \"\"\n            )}\n            {this.props.authenticated ? (\n              <li>\n                <Link to=\"/login\" onClick={logout}>\n                  SignOut\n                </Link>\n              </li>\n            ) : (\n              \"\"\n            )}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub, faGoogle } from \"@fortawesome/free-brands-svg-icons\";\n\nimport \"./Login.scss\";\n\nimport {\n  signin,\n  signup,\n  signInWithGoogle,\n  signInWithGitHub,\n  forgotpass,\n  updatepass,\n} from \"../../helpers/auth\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      error: null,\n      loginError: null,\n      signupError: null,\n      forgotpwError: null,\n      email: \"\",\n      password: \"\",\n      newpass: \"\",\n      username: \"\",\n      showForgot: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSignIn = this.handleSignIn.bind(this);\n    this.handleSignUp = this.handleSignUp.bind(this);\n    this.handleForgotPass = this.handleForgotPass.bind(this);\n    this.handleUpdatePass = this.handleUpdatePass.bind(this);\n    this.googleSignIn = this.googleSignIn.bind(this);\n    this.githubSignIn = this.githubSignIn.bind(this);\n    this.onLogin = this.onLogin.bind(this);\n    this.onRegister = this.onRegister.bind(this);\n    this.onForgot = this.onForgot.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  async handleSignIn(event) {\n    event.preventDefault();\n    this.setState({ loginError: \"\" });\n    try {\n      await signin(this.state.email, this.state.password);\n    } catch (error) {\n      this.setState({ loginError: error.message });\n    }\n  }\n\n  async handleUpdatePass(event) {\n    event.preventDefault();\n    this.setState({ forgotpwError: \"\" });\n    try {\n      await signin(this.state.email, this.state.password).then(\n        async function () {\n          await updatepass(this.state.newpass);\n        }\n      );\n    } catch (error) {\n      this.setState({ forgotpwError: error.message });\n    }\n  }\n\n  async handleForgotPass(event) {\n    event.preventDefault();\n    this.setState({ forgotpwError: \"\" });\n    try {\n      await forgotpass(this.state.email);\n    } catch (error) {\n      this.setState({ forgotpwError: error.message });\n    }\n  }\n\n  async handleSignUp(event) {\n    event.preventDefault();\n    this.setState({ signupError: \"\" });\n    try {\n      await signup(this.state.email, this.state.password, this.state.username);\n    } catch (error) {\n      this.setState({ signupError: error.message });\n    }\n  }\n\n  async googleSignIn() {\n    try {\n      await signInWithGoogle();\n    } catch (error) {\n      this.setState({ loginError: error.message });\n    }\n  }\n\n  async githubSignIn() {\n    try {\n      await signInWithGitHub();\n    } catch (error) {\n      this.setState({ loginError: error.message });\n    }\n  }\n\n  onLogin() {\n    document.getElementById(\"container\").classList.remove(\"right-panel-active\");\n    setTimeout(() => {\n      this.setState({ showForgot: false });\n    }, 500);\n  }\n\n  onRegister() {\n    document.getElementById(\"container\").classList.add(\"right-panel-active\");\n    this.setState({ showForgot: false });\n  }\n\n  onForgot() {\n    document.getElementById(\"container\").classList.add(\"right-panel-active\");\n    this.setState({ showForgot: true });\n  }\n\n  render() {\n    return (\n      <div id=\"login\">\n        <div className=\"bg\" />\n        <div id=\"container\" className=\"login-container\">\n          {!this.state.showForgot ? (\n            <div className=\"form-container sign-up-container\">\n              <h1>Sign Up</h1>\n              <div className=\"input-wrap\">\n                <form autoComplete=\"off\" onSubmit={this.handleSignUp}>\n                  <TextField\n                    id=\"standard\"\n                    label=\"Username\"\n                    name=\"username\"\n                    onChange={this.handleChange}\n                    InputProps={{ value: this.state.username }}\n                  />\n                  <TextField\n                    required\n                    id=\"standard-required\"\n                    label=\"Email\"\n                    name=\"email\"\n                    onChange={this.handleChange}\n                    InputProps={{ value: this.state.email }}\n                  />\n                  <TextField\n                    required\n                    id=\"standard-required\"\n                    label=\"Password\"\n                    type=\"password\"\n                    name=\"password\"\n                    onChange={this.handleChange}\n                    InputProps={{ value: this.state.password }}\n                  />\n                  {this.state.signupError ? (\n                    <p className=\"text-danger\">{this.state.signupError}</p>\n                  ) : null}\n                  <button type=\"submit\" className=\"ghost\">\n                    Register\n                  </button>\n                </form>\n              </div>\n              <div className=\"icons\">\n                <FontAwesomeIcon\n                  icon={faGithub}\n                  size=\"2x\"\n                  onClick={this.githubSignIn}\n                />\n                <FontAwesomeIcon\n                  icon={faGoogle}\n                  size=\"2x\"\n                  onClick={this.googleSignIn}\n                />\n              </div>\n            </div>\n          ) : (\n            <div className=\"form-container sign-up-container forgot\">\n              <form\n                style={{ height: \"auto\" }}\n                autoComplete=\"off\"\n                onSubmit={this.handleForgotPass}\n              >\n                <h1>Forgot Password</h1>\n                <div className=\"input-wrap\">\n                  <TextField\n                    required\n                    id=\"standard-required\"\n                    label=\"Email\"\n                    name=\"email\"\n                    onChange={this.handleChange}\n                    InputProps={{ value: this.state.email }}\n                  />\n                  {this.state.forgotpwError ? (\n                    <p className=\"text-danger\">{this.state.forgotpwError}</p>\n                  ) : null}\n                  <button\n                    type=\"submit\"\n                    style={{ padding: 0 }}\n                    className=\"ghost\"\n                  >\n                    Reset Password\n                  </button>\n                </div>\n              </form>\n            </div>\n          )}\n\n          <div className=\"form-container sign-in-container\">\n            <form autoComplete=\"off\" onSubmit={this.handleSignIn}>\n              <h1>Sign In</h1>\n              <div className=\"input-wrap\">\n                <TextField\n                  id=\"standard-required\"\n                  label=\"Email\"\n                  name=\"email\"\n                  onChange={this.handleChange}\n                  InputProps={{ value: this.state.email }}\n                />\n                <TextField\n                  id=\"standard-required\"\n                  label=\"Password\"\n                  type=\"password\"\n                  name=\"password\"\n                  onChange={this.handleChange}\n                  InputProps={{ value: this.state.password }}\n                />\n                <span\n                  style={{ display: \"block\", textAlign: \"left\" }}\n                  onClick={this.onForgot}\n                >\n                  Forgot Password?\n                </span>\n                {this.state.loginError ? (\n                  <p className=\"text-danger\">{this.state.loginError}</p>\n                ) : null}\n                <button type=\"submit\" className=\"ghost\">\n                  Login\n                </button>\n                <div className=\"icons\">\n                  <FontAwesomeIcon\n                    icon={faGithub}\n                    size=\"2x\"\n                    onClick={this.githubSignIn}\n                  />\n                  <FontAwesomeIcon\n                    icon={faGoogle}\n                    size=\"2x\"\n                    onClick={this.googleSignIn}\n                  />\n                </div>\n              </div>\n            </form>\n          </div>\n\n          <div className=\"overlay-container\">\n            <div className=\"overlay\">\n              <div className=\"overlay-panel overlay-left\">\n                <h1>\n                  {this.state.showForgot\n                    ? \"Remember password?\"\n                    : \"Already have an account?\"}\n                </h1>\n                <button onClick={this.onLogin} className=\"ghost\">\n                  Sign In\n                </button>\n              </div>\n              <div className=\"overlay-panel overlay-right\">\n                <h1>Don't have an account?</h1>\n                <button onClick={this.onRegister} className=\"ghost\">\n                  Sign Up\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import { db } from \"../services/firebase\";\n\nexport function readChats() {\n  let abc = [];\n  db.ref(\"chats\").on(\"value\", (snapshot) => {\n    snapshot.forEach((snap) => {\n      abc.push(snap.val());\n    });\n    return abc;\n  });\n}\n\nexport function writeChats(message) {\n  return db.ref(\"chats\").push({\n    content: message.content,\n    timestamp: message.timestamp,\n    uid: message.uid,\n  });\n}\n\nexport async function createTaskboard(userId, groupId) {\n  const taskboard = await db.ref(`taskboards/${groupId}`).push({\n    name: \"New Taskboard\",\n    description: \"This is a new taskboard\",\n    createdBy: userId,\n    createdTimestamp: Date.now(),\n  });\n  return taskboard.getKey();\n}\n\nexport function deleteTaskboard(groupId, taskboardId) {\n  return db.ref(`taskboards/${groupId}/${taskboardId}`).remove();\n}\n\nexport function updateTaskboard(groupId, taskboardId, taskboard) {\n  return db.ref(`taskboards/${groupId}/${taskboardId}`).update(taskboard);\n}\n\n/**\n * Create a new column in the database.\n * The return value is void in all cases.\n * @param {string} columnsKey - The unique key that all columns are created under\n * @param {string} name - The name of the column\n */\nexport function createTaskColumn(boardId, name) {\n  return db.ref(`columns/${boardId}`).push({\n    name,\n    createdTimestamp: Date.now(),\n  });\n}\n\nexport function deleteTaskColumn(boardId, id) {\n  return db.ref(`columns/${boardId}/${id}`).update({\n    deletedTimestamp: Date.now(),\n  });\n}\n\nexport function deleteTask(columnId, taskId) {\n  return db.ref(`tasks/${columnId}/${taskId}`).update({\n    deletedTimestamp: Date.now(),\n  });\n}\n\nexport function createTask(columnId, task) {\n  return db.ref(`tasks/${columnId}`).push(task);\n}\n\nexport function createTaskTodo(columnId, taskId, todo) {\n  return db.ref(`tasks/${columnId}/${taskId}/todos`).push(todo);\n}\n\nexport function updateTaskTodoStatus(columnId, taskId, todoId, isComplete) {\n  return db.ref(`tasks/${columnId}/${taskId}/todos/${todoId}`).update({\n    isComplete: isComplete,\n  });\n}\n\nexport function deleteTaskTodo(columnId, taskId, todoId) {\n  return db.ref(`tasks/${columnId}/${taskId}/todos/${todoId}`).remove();\n}\n\nexport async function updateTaskColumn(newColumnId, oldColumnId, taskId) {\n  try {\n    //TODO: Make this logic more sound when second operation fails need to undo first\n    let task = await db.ref(`tasks/${oldColumnId}/${taskId}`).once(\"value\");\n    await db.ref(`tasks/${newColumnId}/${taskId}`).update(task.val());\n    await db.ref(`tasks/${oldColumnId}/${taskId}`).remove();\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport function updateTask(columnId, taskId, updatedFields) {\n  return db.ref(`tasks/${columnId}/${taskId}`).update(updatedFields);\n}\n\nexport function createComment(taskId, comment) {\n  return db.ref(`taskComments/${taskId}`).push(comment);\n}\n\nexport function deleteComment(taskId, commentId) {\n  return db.ref(`taskComments/${taskId}/${commentId}`).remove();\n}\n\nexport async function getUserById(userId) {\n  return db.ref(`users/${userId}`).once(\"value\");\n}\n","/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\n/* SHA-1 (FIPS 180-4) implementation in JavaScript                    (c) Chris Veness 2002-2019  */\n/*                                                                                   MIT Licence  */\n/* www.movable-type.co.uk/scripts/sha1.html                                                       */\n/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\n\n/**\n * SHA-1 hash function reference implementation.\n *\n * This is an annotated direct implementation of FIPS 180-4, without any optimisations. It is\n * intended to aid understanding of the algorithm rather than for production use.\n *\n * While it could be used where performance is not critical, I would recommend using the ‘Web\n * Cryptography API’ (developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/digest) for the browser,\n * or the ‘crypto’ library (nodejs.org/api/crypto.html#crypto_class_hash) in Node.js.\n *\n * See csrc.nist.gov/groups/ST/toolkit/secure_hashing.html\n *     csrc.nist.gov/groups/ST/toolkit/examples.html\n */\nclass Sha1 {\n  /**\n   * Generates SHA-1 hash of string.\n   *\n   * @param   {string} msg - (Unicode) string to be hashed.\n   * @param   {Object} [options]\n   * @param   {string} [options.msgFormat=string] - Message format: 'string' for JavaScript string\n   *   (gets converted to UTF-8 for hashing); 'hex-bytes' for string of hex bytes ('616263' ≡ 'abc') .\n   * @param   {string} [options.outFormat=hex] - Output format: 'hex' for string of contiguous\n   *   hex bytes; 'hex-w' for grouping hex bytes into groups of (4 byte / 8 character) words.\n   * @returns {string} Hash of msg as hex character string.\n   *\n   * @example\n   *   import Sha1 from './sha1.js';\n   *   const hash = Sha1.hash('abc'); // 'a9993e364706816aba3e25717850c26c9cd0d89d'\n   */\n  static hash(msg, options) {\n    const defaults = { msgFormat: \"string\", outFormat: \"hex\" };\n    const opt = Object.assign(defaults, options);\n\n    switch (opt.msgFormat) {\n      default: // default is to convert string to UTF-8, as SHA only deals with byte-streams\n      case \"string\":\n        msg = utf8Encode(msg);\n        break;\n      case \"hex-bytes\":\n        msg = hexBytesToString(msg);\n        break; // mostly for running tests\n    }\n\n    // constants [§4.2.1]\n    const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n\n    // initial hash value [§5.3.1]\n    const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n    // PREPROCESSING [§6.1.1]\n\n    msg += String.fromCharCode(0x80); // add trailing '1' bit (+ 0's padding) to string [§5.1.1]\n\n    // convert string msg into 512-bit/16-integer blocks arrays of ints [§5.2.1]\n    const l = msg.length / 4 + 2; // length (in 32-bit integers) of msg + ‘1’ + appended length\n    const N = Math.ceil(l / 16); // number of 16-integer-blocks required to hold 'l' ints\n    const M = new Array(N);\n\n    for (let i = 0; i < N; i++) {\n      M[i] = new Array(16);\n      for (let j = 0; j < 16; j++) {\n        // encode 4 chars per integer, big-endian encoding\n        M[i][j] =\n          (msg.charCodeAt(i * 64 + j * 4 + 0) << 24) |\n          (msg.charCodeAt(i * 64 + j * 4 + 1) << 16) |\n          (msg.charCodeAt(i * 64 + j * 4 + 2) << 8) |\n          (msg.charCodeAt(i * 64 + j * 4 + 3) << 0);\n      } // note running off the end of msg is ok 'cos bitwise ops on NaN return 0\n    }\n    // add length (in bits) into final pair of 32-bit integers (big-endian) [§5.1.1]\n    // note: most significant word would be (len-1)*8 >>> 32, but since JS converts\n    // bitwise-op args to 32 bits, we need to simulate this by arithmetic operators\n    M[N - 1][14] = ((msg.length - 1) * 8) / Math.pow(2, 32);\n    M[N - 1][14] = Math.floor(M[N - 1][14]);\n    M[N - 1][15] = ((msg.length - 1) * 8) & 0xffffffff;\n\n    // HASH COMPUTATION [§6.1.2]\n\n    for (let i = 0; i < N; i++) {\n      const W = new Array(80);\n\n      // 1 - prepare message schedule 'W'\n      for (let t = 0; t < 16; t++) W[t] = M[i][t];\n      for (let t = 16; t < 80; t++)\n        W[t] = Sha1.ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n\n      // 2 - initialise five working variables a, b, c, d, e with previous hash value\n      let a = H[0],\n        b = H[1],\n        c = H[2],\n        d = H[3],\n        e = H[4];\n\n      // 3 - main loop (use JavaScript '>>> 0' to emulate UInt32 variables)\n      for (let t = 0; t < 80; t++) {\n        const s = Math.floor(t / 20); // seq for blocks of 'f' functions and 'K' constants\n        const T =\n          (Sha1.ROTL(a, 5) + Sha1.f(s, b, c, d) + e + K[s] + W[t]) >>> 0;\n        e = d;\n        d = c;\n        c = Sha1.ROTL(b, 30) >>> 0;\n        b = a;\n        a = T;\n      }\n\n      // 4 - compute the new intermediate hash value (note 'addition modulo 2^32' – JavaScript\n      // '>>> 0' coerces to unsigned UInt32 which achieves modulo 2^32 addition)\n      H[0] = (H[0] + a) >>> 0;\n      H[1] = (H[1] + b) >>> 0;\n      H[2] = (H[2] + c) >>> 0;\n      H[3] = (H[3] + d) >>> 0;\n      H[4] = (H[4] + e) >>> 0;\n    }\n\n    // convert H0..H4 to hex strings (with leading zeros)\n    for (let h = 0; h < H.length; h++)\n      H[h] = (\"00000000\" + H[h].toString(16)).slice(-8);\n\n    // concatenate H0..H4, with separator if required\n    const separator = opt.outFormat === \"hex-w\" ? \" \" : \"\";\n\n    return H.join(separator);\n\n    /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\n\n    function utf8Encode(str) {\n      try {\n        return new TextEncoder()\n          .encode(str, \"utf-8\")\n          .reduce((prev, curr) => prev + String.fromCharCode(curr), \"\");\n      } catch (e) {\n        // no TextEncoder available?\n        return unescape(encodeURIComponent(str)); // monsur.hossa.in/2012/07/20/utf-8-in-javascript.html\n      }\n    }\n\n    function hexBytesToString(hexStr) {\n      // convert string of hex numbers to a string of chars (eg '616263' -> 'abc').\n      const str = hexStr.replace(\" \", \"\"); // allow space-separated groups\n      return str === \"\"\n        ? \"\"\n        : str\n            .match(/.{2}/g)\n            .map((byte) => String.fromCharCode(parseInt(byte, 16)))\n            .join(\"\");\n    }\n  }\n\n  /**\n   * Function 'f' [§4.1.1].\n   * @private\n   */\n  static f(s, x, y, z) {\n    switch (s) {\n      case 0:\n        return (x & y) ^ (~x & z); // Ch()\n      case 1:\n        return x ^ y ^ z; // Parity()\n      case 2:\n        return (x & y) ^ (x & z) ^ (y & z); // Maj()\n      case 3:\n        return x ^ y ^ z; // Parity()\n      default:\n        break;\n    }\n  }\n\n  /**\n   * Rotates left (circular left shift) value x by n positions [§3.2.5].\n   * @private\n   */\n  static ROTL(x, n) {\n    return (x << n) | (x >>> (32 - n));\n  }\n}\n\n/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\n\nexport default Sha1;\n","import { useState } from \"react\";\n\nexport const useInputValue = (initialValue = \"\") => {\n  const [inputValue, setInputValue] = useState(initialValue);\n\n  return {\n    inputValue,\n    changeInput: (event) => setInputValue(event.target.value),\n    clearInput: () => setInputValue(\"\"),\n    keyInput: (event, callback) => {\n      if (event.which === 13 || event.keyCode === 13) {\n        callback(inputValue);\n        return true;\n      }\n\n      return false;\n    },\n  };\n};\n\nexport const useParticipants = (props) => {\n  //const [participants, setParticipants] = useState(initialValue);\n  let participants = props.participants;\n\n  return {\n    //participants: participants,\n    addParticipants: (text, regist) => {\n      //console.log(regist);\n      if (text !== \"\") {\n        props.setParticipants(\n          participants.concat({\n            text,\n            checked: false,\n            registered: regist.userExists,\n            uid: regist.userID,\n          })\n        );\n      }\n    },\n    addMembers: (text, regist) => {\n      if (text !== \"\") {\n        props.setParticipants(\n          participants.concat({\n            text,\n            checked: false,\n            isMember: regist.userExists,\n            uid: regist.userID,\n          })\n        );\n      }\n    },\n    checkParticipants: (idx) => {\n      props.setParticipants(\n        participants.map((participant, index) => {\n          if (idx === index) {\n            participant.checked = !participant.checked;\n          }\n\n          return participant;\n        })\n      );\n    },\n    removeParticipants: (idx) => {\n      props.setParticipants(\n        participants.filter((participant, index) => idx !== index)\n      );\n    },\n  };\n};\n","import React, { memo } from \"react\";\nimport { TextField, Paper, Button, Grid } from \"@material-ui/core\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\n\nconst AddParticipant = memo((props) => {\n  return (\n    <Paper style={{ margin: 0, padding: 10 }}>\n      <Grid container>\n        <Grid xs={10} md={10} item style={{ paddingRight: 16 }}>\n          <TextField\n            placeholder=\"Add Participants Here\"\n            value={props.inputValue}\n            onChange={props.onInputChange}\n            onKeyPress={props.onInputKeyPress}\n            fullWidth\n          />\n        </Grid>\n        <Grid xs={2} md={1} item>\n          <Button fullWidth variant=\"outlined\" onClick={props.onButtonClick}>\n            <PersonAddIcon />\n          </Button>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n});\n\nexport default AddParticipant;\n","import React, { memo } from \"react\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport {\n  ListItem,\n  Checkbox,\n  IconButton,\n  ListItemText,\n  ListItemSecondaryAction,\n} from \"@material-ui/core\";\nimport DeleteOutlined from \"@material-ui/icons/DeleteOutlined\";\n\nconst ListItemMessage = memo((props) => {\n  let source = props.source;\n\n  if (source === \"createSubGroup\") {\n    return (\n      <ListItemText\n        primary={props.registered ? \"User Found\" : \"User Not Found\"}\n        style={props.registered ? { color: \"green\" } : { color: \"red\" }}\n      />\n    );\n  } else if (source === \"createGroup\") {\n    return (\n      <ListItemText\n        primary={props.registered ? \"Registered\" : \"Not Registered\"}\n        style={props.registered ? { color: \"green\" } : { color: \"red\" }}\n      />\n    );\n  }\n});\n\nconst ParticipantListItem = memo((props) => {\n  let shortenedString;\n\n  if (props.text.length > 10) {\n    shortenedString = `${props.text.substring(0, 10)}...`;\n  } else {\n    shortenedString = props.text;\n  }\n\n  return (\n    <ListItem divider={props.divider} style={{ margin: -12 }}>\n      <Checkbox\n        onClick={props.onCheckBoxToggle}\n        checked={props.checked}\n        style={{ color: \"#05728f\" }}\n      />\n      <PersonIcon style={{ color: \"#05728f\", paddingRight: 5 }} />\n      <ListItemText primary={shortenedString} />\n      {/*<ListItemText primary=\"Test\" />*/}\n      <ListItemMessage\n        registered={props.registered}\n        style={props.registered}\n        source={props.source}\n      />\n      <ListItemSecondaryAction>\n        <IconButton\n          aria-label=\"Delete Participant\"\n          onClick={props.onButtonClick}\n        >\n          <DeleteOutlined />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n});\n\nexport default ParticipantListItem;\n","import React, { memo } from \"react\";\nimport { List, Paper } from \"@material-ui/core\";\n\nimport ParticipantListItem from \"./ParticipantListItem\";\n\nconst ParticipantList = memo((props) => {\n  return (\n    <div>\n      {props.items.length > 0 && (\n        <Paper style={{ margin: 10 }}>\n          <List style={{ overflow: \"visible\" }}>\n            {props.items.map((participant, idx) => (\n              <ParticipantListItem\n                {...participant}\n                key={`ParticipantItem.${idx}`}\n                divider={idx !== props.items.length - 1}\n                onButtonClick={() => props.onItemRemove(idx)}\n                onCheckBoxToggle={() => props.onItemCheck(idx)}\n                source={props.source}\n              />\n            ))}\n          </List>\n        </Paper>\n      )}\n    </div>\n  );\n});\n\nexport default ParticipantList;\n","import React, { memo, useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Modal from \"@material-ui/core/Modal\";\nimport \"./CreateGroup.scss\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport SHA1 from \"../../services/sha1\";\n\nimport {\n  useInputValue,\n  useParticipants,\n} from \"../Participant-Components/Participants-custom-hooks\";\nimport AddParticipant from \"../Participant-Components/AddParticipant\";\nimport ParticipantList from \"../Participant-Components/ParticipantList\";\n\nimport { db } from \"../../services/firebase\";\n\nconst AddGroupParticipant = memo((props) => {\n  const { inputValue, changeInput, clearInput, keyInput } = useInputValue();\n  const {\n    //participants,\n    addParticipants,\n    checkParticipants,\n    removeParticipants,\n  } = useParticipants(props);\n  const clearInputAndAddParticipant = () => {\n    const userExists = () => {\n      let userEx = false;\n\n      let uid = null;\n\n      for (let [k, v] of props.users) {\n        //console.log(\"Key: \" + k);\n        //console.log(\"Value: \" + v);\n        if (v.email === inputValue || v.name === inputValue) {\n          userEx = true;\n          uid = k;\n        }\n      }\n      return {\n        userExists: userEx,\n        userID: uid,\n      };\n    };\n\n    clearInput();\n    addParticipants(inputValue, userExists());\n  };\n  return (\n    <div>\n      <AddParticipant\n        inputValue={inputValue}\n        onInputChange={changeInput}\n        onButtonClick={clearInputAndAddParticipant}\n        onInputKeyPress={(event) =>\n          keyInput(event, clearInputAndAddParticipant)\n        }\n      />\n      <ParticipantList\n        items={props.participants}\n        onItemCheck={(idx) => checkParticipants(idx)}\n        onItemRemove={(idx) => removeParticipants(idx)}\n        source={\"createGroup\"}\n      />\n    </div>\n  );\n});\n\nconst AddGroupLeader = memo((props) => {\n  const { inputValue, changeInput, clearInput, keyInput } = useInputValue();\n  const {\n    //participants,\n    addParticipants,\n    checkParticipants,\n    removeParticipants,\n  } = useParticipants(props);\n  const clearInputAndAddParticipant = (_) => {\n    const userExists = () => {\n      let userEx = false;\n      let uid = null;\n\n      for (let [k, v] of props.users) {\n        //console.log(\"Key: \" + k);\n        //console.log(\"Value: \" + v);\n        if (v.email === inputValue || v.name === inputValue) {\n          userEx = true;\n          uid = k;\n        }\n      }\n      return {\n        userExists: userEx,\n        userID: uid,\n      };\n    };\n\n    clearInput();\n    addParticipants(inputValue, userExists());\n  };\n  return (\n    <div>\n      <AddParticipant\n        inputValue={inputValue}\n        onInputChange={changeInput}\n        onButtonClick={clearInputAndAddParticipant}\n        onInputKeyPress={(event) =>\n          keyInput(event, clearInputAndAddParticipant)\n        }\n      />\n      <ParticipantList\n        items={props.participants}\n        onItemCheck={(idx) => checkParticipants(idx)}\n        onItemRemove={(idx) => removeParticipants(idx)}\n        source={\"createGroup\"}\n      />\n    </div>\n  );\n});\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    position: \"absolute\",\n    width: \"35%\",\n    minWidth: \"620px\",\n    height: \"auto\",\n    backgroundColor: theme.palette.background.paper,\n    padding: \"0px, 0px 0px 0px\",\n    borderRadius: \"10px\",\n    boxShadow:\n      \"0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22)\",\n    overflow: \"auto\",\n    maxHeight: \"100%\",\n  },\n}));\n\nexport default function CreateGroup(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const [savingGroup, setSavingGroup] = useState(false);\n  const [saveError, setSaveError] = useState(null);\n\n  const [groupName, setGroupName] = useState(\"\");\n  const [groupDesc, setGroupDesc] = useState(\"\");\n\n  const [participants, setParticipants] = useState([]);\n  const [leaders, setLeaders] = useState([]);\n\n  const [groups, setGroups] = useState(new Map());\n\n  useEffect(() => {\n    try {\n      db.ref(\"groups\").on(\"value\", (snapshot) => {\n        let groups_temp = new Map();\n        snapshot.forEach((snap) => {\n          groups_temp.set(snap.key, snap.val());\n        });\n\n        setGroups(groups_temp);\n      });\n    } catch (error) {\n      setSaveError(error.message);\n    }\n    return () => {\n      db.ref(\"groups\").off(\"value\");\n    };\n  }, []);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setGroupName(null);\n    setGroupDesc(null);\n    setParticipants([]);\n    setLeaders([]);\n  };\n\n  const handleNameChange = (event) => {\n    setGroupName(event.target.value);\n  };\n\n  const handleDescChange = (event) => {\n    setGroupDesc(event.target.value);\n  };\n\n  const handleSaveGroup = (event) => {\n    setSavingGroup(true);\n    setSaveError(null);\n\n    try {\n      let groupID = SHA1.hash(groupName);\n\n      if (!groups.has(groupID)) {\n        db.ref(\"groups/\" + groupID).update({\n          name: groupName,\n          description: groupDesc,\n          id: groupID,\n        });\n\n        /* Template db call for storing chats to a group\n        db.ref(\"groups/6c48a6eadfed63a0af3e39eb36911e24b4e356de/chats/\").push({\n          content: this.state.content,\n          timestamp: Date.now(),\n          uid: this.state.user.uid,\n        });\n        */\n\n        for (let i = 0; i < participants.length; ++i) {\n          if (\n            participants[i].registered === true &&\n            participants[i].checked === true\n          ) {\n            let displayName = props.users.get(participants[i].uid).name;\n\n            if (props.users.get(participants[i].uid).name === undefined) {\n              displayName = props.users.get(participants[i].uid).email;\n            }\n\n            db.ref(`groups/${groupID}/members/${participants[i].uid}`).update({\n              displayName: displayName,\n              groupAccess: \"member\",\n            });\n\n            db.ref(`users/${participants[i].uid}/groups/${groupID}`).update({\n              displayName: displayName,\n              groupAccess: \"member\",\n            });\n          }\n        }\n\n        for (let i = 0; i < leaders.length; ++i) {\n          if (leaders[i].registered === true && leaders[i].checked === true) {\n            let displayName = props.users.get(leaders[i].uid).name;\n\n            if (props.users.get(leaders[i].uid).name === undefined) {\n              displayName = props.users.get(leaders[i].uid).email;\n            }\n            db.ref(`groups/${groupID}/members/${leaders[i].uid}`).update({\n              displayName: displayName,\n              groupAccess: \"leader\",\n            });\n            db.ref(`users/${leaders[i].uid}/groups/${groupID}`).update({\n              displayName: displayName,\n              groupAccess: \"leader\",\n            });\n          }\n        }\n        props.refreshGroups();\n\n        setSavingGroup(false);\n        setOpen(false);\n        setParticipants([]);\n        setLeaders([]);\n      } else {\n        setSavingGroup(false);\n        setSaveError(\"Group exists\");\n      }\n    } catch (error) {\n      setSaveError(error);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"fab\">\n        <Fab color=\"primary\" aria-label=\"add\" onClick={handleOpen}>\n          <GroupAddIcon />\n        </Fab>\n      </div>\n\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <form className={classes.paper}>\n            <div className=\"new_group_header\" style={{ background: \"#05728f\" }}>\n              <h2\n                style={{\n                  color: \"#fff\",\n                  borderBottom: \"1px solid #05728f\",\n                  padding: \"1em 3.1em 1em 3.1em\",\n                }}\n              >\n                {\" \"}\n                Create Group\n              </h2>\n            </div>\n            <div\n              className=\"new_group_details\"\n              style={{ padding: \"0px 100px 0px 100px\" }}\n            >\n              <h6 style={{ color: \"#05728f\", marginTop: \"50px\" }}>\n                {\" \"}\n                Group Name{\" \"}\n              </h6>\n              <TextField\n                className=\"group_name\"\n                inputProps={{ style: { fontSize: 20 } }}\n                onChange={handleNameChange}\n                style={{ size: \"small\" }}\n              >\n                {\" \"}\n              </TextField>\n              <h6 style={{ color: \"#05728f\", marginTop: \"40px\" }}>\n                {\" \"}\n                Group Description{\" \"}\n              </h6>\n              <TextField\n                className=\"group_description\"\n                fullWidth={true}\n                inputProps={{ style: { fontSize: 16 } }}\n                onChange={handleDescChange}\n                style={{ marginBottom: \"55px\", size: \"small\" }}\n              >\n                {\" \"}\n              </TextField>\n            </div>\n            <div\n              className=\"add_group_leaders\"\n              style={{ padding: \"0px 100px 0px 100px\" }}\n            >\n              <h6 style={{ color: \"#05728f\" }}> Assign Group Leader(s) </h6>\n              <AddGroupLeader\n                participants={leaders}\n                setParticipants={setLeaders}\n                users={props.users}\n              />\n            </div>\n            <div\n              className=\"add_group_participant\"\n              style={{ padding: \"0px 100px 0px 100px\", marginTop: \"55px\" }}\n            >\n              <h6 style={{ color: \"#05728f\" }}> Invite People </h6>\n              <AddGroupParticipant\n                participants={participants}\n                setParticipants={setParticipants}\n                users={props.users}\n              />\n            </div>\n            {savingGroup ? (\n              <div\n                className=\"spinner-border text-success\"\n                role=\"status\"\n                style={{\n                  display: \"flex\",\n                  marginLeft: \"auto\",\n                  marginRight: \"auto\",\n                  marginTop: \"1em\",\n                  marginBottom: \"1em\",\n                }}\n              >\n                <span className=\"sr-only\" style={{}}>\n                  Saving...\n                </span>\n              </div>\n            ) : (\n              \"\"\n            )}\n            {saveError !== null && saveError !== \"null\" ? (\n              <div\n                className=\"\"\n                style={{ textAlign: \"center\", marginTop: \"2em\", color: \"red\" }}\n              >\n                {saveError}\n              </div>\n            ) : (\n              \"\"\n            )}\n            <div\n              className=\"create_new_group_button\"\n              style={{\n                display: \"flex\",\n                padding: \"0px 95px 0px 95px\",\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                marginBottom: \"3em\",\n                marginTop: \"2.5em\",\n              }}\n            >\n              <Button\n                variant=\"outlined\"\n                color=\"inherit\"\n                onClick={handleSaveGroup}\n                //fullWidth={true}\n                style={{\n                  backgroundColor: \"#05728f\",\n                  color: \"#fff\",\n                  fontWeight: \"bold\",\n                  height: \"45px\",\n                  width: \"10em\",\n                  border: \"2px solid\",\n                  borderRadius: 20,\n                  borderColor: \"#05728f\",\n                  marginLeft: \"auto\",\n                  marginRight: \"auto\",\n                  justifyContent: \"center\",\n                }}\n              >\n                Save\n              </Button>\n              <Button\n                autoFocus\n                onClick={handleClose}\n                variant=\"outlined\"\n                color=\"inherit\"\n                //fullWidth={true}\n                style={{\n                  color: \"#05728f\",\n                  fontWeight: \"bold\",\n                  height: \"45px\",\n                  width: \"10em\",\n                  border: \"2px solid\",\n                  borderRadius: 20,\n                  marginLeft: \"auto\",\n                  marginRight: \"auto\",\n                  justifyContent: \"center\",\n                }}\n              >\n                Cancel\n              </Button>\n            </div>\n          </form>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n","import React, { memo, useState, useEffect } from \"react\";\nimport \"./CreateSubGroup.scss\";\nimport {\n  useInputValue,\n  useParticipants,\n} from \"../Participant-Components/Participants-custom-hooks\";\nimport AddParticipant from \"../Participant-Components/AddParticipant\";\nimport ParticipantList from \"../Participant-Components/ParticipantList\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SHA1 from \"../../services/sha1\";\nimport { db } from \"../../services/firebase\";\nimport { Typography } from \"@material-ui/core\";\n\nconst AddSubGroupParticipant = memo((props) => {\n  const { inputValue, changeInput, clearInput, keyInput } = useInputValue();\n  const {\n    //participants,\n    addParticipants,\n    checkParticipants,\n    removeParticipants,\n  } = useParticipants(props);\n  const clearInputAndAddParticipant = () => {\n    const memberExists = () => {\n      let userEx = false;\n      let uid = null;\n\n      for (let [k, v] of props.groupMembers) {\n        if (\n          v.displayName === inputValue ||\n          props.users.get(k).email === inputValue\n        ) {\n          userEx = true;\n          uid = k;\n        }\n      }\n      return {\n        userExists: userEx,\n        userID: uid,\n      };\n    };\n\n    clearInput();\n    addParticipants(inputValue, memberExists());\n  };\n  return (\n    <div>\n      <AddParticipant\n        inputValue={inputValue}\n        onInputChange={changeInput}\n        onButtonClick={clearInputAndAddParticipant}\n        onInputKeyPress={(event) =>\n          keyInput(event, clearInputAndAddParticipant)\n        }\n      />\n      <ParticipantList\n        items={props.participants}\n        onItemCheck={(idx) => checkParticipants(idx)}\n        onItemRemove={(idx) => removeParticipants(idx)}\n        source={\"createSubGroup\"}\n      />\n    </div>\n  );\n});\n\nconst AddSubGroupLeader = memo((props) => {\n  const { inputValue, changeInput, clearInput, keyInput } = useInputValue();\n  const {\n    //participants,\n    addParticipants,\n    checkParticipants,\n    removeParticipants,\n  } = useParticipants(props);\n  const clearInputAndAddParticipant = () => {\n    const memberExists = () => {\n      let userEx = false;\n      let uid = null;\n\n      for (let [k, v] of props.groupMembers) {\n        if (\n          v.displayName === inputValue ||\n          props.users.get(k).email === inputValue\n        ) {\n          userEx = true;\n          uid = k;\n        }\n      }\n      return {\n        userExists: userEx,\n        userID: uid,\n      };\n    };\n\n    clearInput();\n    addParticipants(inputValue, memberExists());\n  };\n  return (\n    <div>\n      <AddParticipant\n        inputValue={inputValue}\n        onInputChange={changeInput}\n        onButtonClick={clearInputAndAddParticipant}\n        onInputKeyPress={(event) =>\n          keyInput(event, clearInputAndAddParticipant)\n        }\n      />\n      <ParticipantList\n        items={props.participants}\n        onItemCheck={(idx) => checkParticipants(idx)}\n        onItemRemove={(idx) => removeParticipants(idx)}\n        source={\"createSubGroup\"}\n      />\n    </div>\n  );\n});\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    position: \"absolute\",\n    width: \"35%\",\n    minWidth: \"620px\",\n    height: \"auto\",\n    backgroundColor: theme.palette.background.paper,\n    padding: \"0px, 0px 0px 0px\",\n    borderRadius: \"10px\",\n    boxShadow:\n      \"0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22)\",\n    overflow: \"auto\",\n    maxHeight: \"100%\",\n  },\n}));\n\nexport default function CreateSubGroup(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const [savingGroup, setSavingGroup] = useState(false);\n  const [saveError, setSaveError] = useState(null);\n\n  const [subgroupName, setSubGroupName] = useState(\"\");\n  const [subgroupDesc, setSubGroupDesc] = useState(\"\");\n\n  const [participants, setParticipants] = useState([]);\n  const [leaders, setLeaders] = useState([]);\n\n  const [subGroups, setSubgroups] = useState(new Map());\n  const [members, setMembers] = useState(new Map());\n\n  function membersExistInGroup() {\n    let allExists = true;\n    for (let i = 0; i < participants.length; i++) {\n      if (!members.has(participants[i].uid)) {\n        allExists = false;\n      }\n    }\n    return allExists;\n  }\n\n  useEffect(() => {\n    try {\n      db.ref(`groups/${props.selectedGroupID}/subGroups`).on(\n        \"value\",\n        (snapshot) => {\n          let groups_temp = new Map();\n          snapshot.forEach((snap) => {\n            groups_temp.set(snap.key, snap.val());\n          });\n          setSubgroups(groups_temp);\n        }\n      );\n    } catch (error) {\n      setSaveError(error.message);\n    }\n    try {\n      db.ref(`groups/${props.selectedGroupID}/members`).on(\n        \"value\",\n        (snapshot) => {\n          let members_temp = new Map();\n          snapshot.forEach((snap) => {\n            members_temp.set(snap.key, snap.val());\n          });\n          setMembers(members_temp);\n        }\n      );\n    } catch (error) {\n      setSaveError(error.message);\n    }\n    return () => {\n      db.ref(\"subGroups\").off(\"value\");\n      db.ref(\"members\").off(\"value\");\n    };\n  }, [props.selectedGroupID]);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setSubGroupName(null);\n    setSubGroupDesc(null);\n    setParticipants([]);\n    setLeaders([]);\n  };\n\n  const handleNameChange = (event) => {\n    setSubGroupName(event.target.value);\n  };\n\n  const handleDescChange = (event) => {\n    setSubGroupDesc(event.target.value);\n  };\n\n  const handleSaveSubGroup = (event) => {\n    setSavingGroup(true);\n    setSaveError(null);\n\n    try {\n      let groupID = props.selectedGroupID;\n      let subgroupID = SHA1.hash(subgroupName);\n\n      if (!subGroups.has(subgroupID)) {\n        if (membersExistInGroup()) {\n          db.ref(`groups/${groupID}/subGroups/` + subgroupID).update({\n            name: subgroupName,\n            description: subgroupDesc,\n            id: subgroupID,\n          });\n\n          for (let i = 0; i < participants.length; ++i) {\n            if (\n              participants[i].registered === true &&\n              participants[i].checked === true\n            ) {\n              let displayName = props.users.get(participants[i].uid).name;\n\n              if (props.users.get(participants[i].uid).name === undefined) {\n                displayName = props.users.get(participants[i].uid).email;\n              }\n\n              db.ref(\n                `groups/${groupID}/subGroups/${subgroupID}/members/${participants[i].uid}`\n              ).update({\n                displayName: displayName,\n                groupAccess: \"member\",\n              });\n\n              db.ref(\n                `users/${participants[i].uid}/groups/${groupID}/subGroups/${subgroupID}`\n              ).update({\n                displayName: displayName,\n                groupAccess: \"member\",\n              });\n            }\n          }\n\n          for (let i = 0; i < leaders.length; ++i) {\n            if (leaders[i].registered === true && leaders[i].checked === true) {\n              let displayName = props.users.get(leaders[i].uid).name;\n\n              if (props.users.get(leaders[i].uid).name === undefined) {\n                displayName = props.users.get(leaders[i].uid).email;\n              }\n              db.ref(\n                `groups/${groupID}/subGroups/${subgroupID}/members/${leaders[i].uid}`\n              ).update({\n                displayName: displayName,\n                groupAccess: \"leader\",\n              });\n              db.ref(\n                `users/${leaders[i].uid}/groups/${groupID}/subGroups/${subgroupID}`\n              ).update({\n                displayName: displayName,\n                groupAccess: \"leader\",\n              });\n            }\n          }\n          props.refreshGroups();\n\n          setSavingGroup(false);\n          setOpen(false);\n          setParticipants([]);\n          setLeaders([]);\n        } else {\n          setSavingGroup(false);\n          setSaveError(\"User(s) is not part of \" + props.selecteGroupName);\n        }\n      } else {\n        setSavingGroup(false);\n        setSaveError(\"Subgroup exists\");\n      }\n    } catch (error) {\n      setSaveError(error);\n    }\n  };\n\n  return (\n    <div id=\"create-subgroup-form\">\n      <div className=\"addSubGroup\">\n        <button type=\"button\" onClick={handleOpen} className=\"primary-button\">\n          <Typography>Create New Subgroup</Typography>\n        </button>\n      </div>\n\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <form className={classes.paper}>\n            <div className=\"new_group_header\" style={{ background: \"#05728f\" }}>\n              <h2\n                style={{\n                  color: \"#fff\",\n                  borderBottom: \"1px solid #05728f\",\n                  padding: \"1em 3.1em 0em 3.1em\",\n                }}\n              >\n                {\" \"}\n                Create Subgroup\n              </h2>\n              <h6\n                style={{\n                  color: \"#fff\",\n                  borderBottom: \"1px solid #05728f\",\n                  padding: \"0em 6.3em 1em 6.3em\",\n                }}\n              >\n                {\" \"}\n                {props.selecteGroupName}\n              </h6>\n            </div>\n            <div\n              className=\"new_group_details\"\n              style={{ padding: \"0px 100px 0px 100px\" }}\n            >\n              <h6 style={{ color: \"#05728f\", marginTop: \"50px\" }}>\n                {\" \"}\n                Subgroup Name{\" \"}\n              </h6>\n              <TextField\n                className=\"group_name\"\n                id=\"outlined-basic\"\n                inputProps={{ style: { fontSize: 20 } }}\n                onChange={handleNameChange}\n                style={{ size: \"small\" }}\n              >\n                {\" \"}\n              </TextField>\n              <h6 style={{ color: \"#05728f\", marginTop: \"40px\" }}>\n                {\" \"}\n                Subgroup Description{\" \"}\n              </h6>\n              <TextField\n                className=\"group_description\"\n                fullWidth={true}\n                inputProps={{ style: { fontSize: 16 } }}\n                onChange={handleDescChange}\n                style={{ marginBottom: \"55px\", size: \"small\" }}\n              >\n                {\" \"}\n              </TextField>\n            </div>\n            <div\n              className=\"add_group_leaders\"\n              style={{ padding: \"0px 100px 0px 100px\" }}\n            >\n              <h6 style={{ color: \"#05728f\" }}> Assign Subgroup Leader(s) </h6>\n              <AddSubGroupLeader\n                participants={leaders}\n                setParticipants={setLeaders}\n                users={props.users}\n                groupMembers={props.groupMembers}\n              />\n            </div>\n            <div\n              className=\"add_group_participant\"\n              style={{ padding: \"0px 100px 0px 100px\", marginTop: \"55px\" }}\n            >\n              <h6 style={{ color: \"#05728f\" }}> Invite People </h6>\n              <AddSubGroupParticipant\n                participants={participants}\n                setParticipants={setParticipants}\n                users={props.users}\n                groupMembers={props.groupMembers}\n              />\n            </div>\n            {savingGroup ? (\n              <div\n                className=\"spinner-border text-success\"\n                role=\"status\"\n                style={{\n                  display: \"flex\",\n                  marginLeft: \"auto\",\n                  marginRight: \"auto\",\n                  marginTop: \"1em\",\n                  marginBottom: \"1em\",\n                }}\n              >\n                <span className=\"sr-only\" style={{}}>\n                  Saving...\n                </span>\n              </div>\n            ) : (\n              \"\"\n            )}\n            {saveError !== null && saveError !== \"null\" ? (\n              <div\n                className=\"\"\n                style={{ textAlign: \"center\", marginTop: \"2em\", color: \"red\" }}\n              >\n                {saveError}\n              </div>\n            ) : (\n              \"\"\n            )}\n            <div\n              className=\"create_new_subgroup_button\"\n              style={{\n                display: \"flex\",\n                padding: \"0px 95px 0px 95px\",\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                marginBottom: \"3em\",\n                marginTop: \"2.5em\",\n              }}\n            >\n              <Button\n                variant=\"outlined\"\n                onClick={handleSaveSubGroup}\n                color=\"inherit\"\n                style={{\n                  backgroundColor: \"#05728f\",\n                  color: \"#fff\",\n                  fontWeight: \"bold\",\n                  height: \"45px\",\n                  width: \"10em\",\n                  marginLeft: \"auto\",\n                  marginRight: \"auto\",\n                  border: \"2px solid\",\n                  borderRadius: 20,\n                  borderColor: \"#05728f\",\n                  justifyContent: \"center\",\n                }}\n              >\n                Create\n              </Button>\n              <Button\n                autoFocus\n                onClick={handleClose}\n                variant=\"outlined\"\n                color=\"inherit\"\n                fullWidth={true}\n                style={{\n                  color: \"#05728f\",\n                  fontWeight: \"bold\",\n                  height: \"45px\",\n                  width: \"10em\",\n                  marginLeft: \"auto\",\n                  marginRight: \"auto\",\n                  border: \"2px solid\",\n                  borderRadius: 20,\n                  justifyContent: \"center\",\n                }}\n              >\n                Cancel\n              </Button>\n            </div>\n          </form>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n\n//export default CreateSubGroup;\n","import React, { Component } from \"react\";\nimport { db } from \"../../services/firebase\";\nimport { createTaskboard } from \"../../helpers/db\";\nimport { auth } from \"../../services/firebase\";\nimport {\n  FormControl,\n  Select,\n  MenuItem,\n  withStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPaperPlane, faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport CreateGroup from \"./CreateGroup\";\nimport CreateSubGroup from \"./CreateSubGroup\";\nimport \"./Chat.scss\";\n\nconst useStyles = (theme) => ({\n  List: {\n    width: \"11em\",\n    marginLeft: \"1em\",\n  },\n});\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: auth().currentUser,\n      chats: [],\n      usrGroups: new Map(),\n      usrSubGroups: new Map(),\n      boards: [],\n      groupMembers: new Map(),\n      groups: new Map(),\n      selectedGroupID: \"\",\n      selectedGroupName: \"\",\n      subGroups: new Map(),\n      selectedSubGroupID: \"-1\",\n      selectedSubGroupName: \"Main Group\",\n      users: new Map(),\n      content: \"\",\n      readError: null,\n      writeError: null,\n      loadingChats: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.refreshGroups = this.refreshGroups.bind(this);\n    //this.myRef = React.createRef();\n  }\n\n  async componentDidMount() {\n    let container = document.querySelector(\".msg-mid\");\n    this.setState({ readError: null, loadingChats: true });\n    //const chatArea = this.myRef.current;\n\n    try {\n      db.ref(\"users\").on(\"value\", (snapshot) => {\n        const users = new Map();\n        snapshot.forEach((snap) => {\n          users.set(snap.key, snap.val());\n        });\n\n        this.setState({ users });\n      });\n    } catch (error) {\n      this.setState({ readError: error.message });\n    }\n\n    const groupsList = new Map();\n    try {\n      db.ref(`users/${this.state.user.uid}/groups`).on(\"value\", (snapshot) => {\n        snapshot.forEach((snap) => {\n          groupsList.set(snap.key, snap.val());\n        });\n        this.setState({ usrGroups: groupsList });\n      });\n    } catch (error) {\n      this.setState({ readError: error.message });\n    }\n\n    try {\n      db.ref(`groups`).on(\"value\", (snapshot) => {\n        const groupsTemp = new Map();\n        snapshot.forEach((snap) => {\n          if (this.state.usrGroups.has(snap.key)) {\n            groupsTemp.set(snap.key, snap.val());\n          }\n        });\n        this.setState({ groups: groupsTemp });\n        if (!this.state.selectedGroupID) {\n          this.setState({\n            selectedGroupID: this.state.groups.keys().next().value,\n          });\n        }\n\n        if (this.state.selectedSubGroupID === \"-1\") {\n          db.ref(`groups/${this.state.selectedGroupID}/chats`).once(\n            \"value\",\n            (snapshot) => {\n              const chats = [];\n              snapshot.forEach((snap) => {\n                chats.push(snap.val());\n              });\n\n              chats.sort((a, b) => {\n                return a.timestamp - b.timestamp;\n              });\n\n              this.setState({ chats });\n            }\n          );\n          this.setState({ loadingChats: false });\n          container.scrollTop = container.scrollHeight;\n        } else {\n          db.ref(\n            `groups/${this.state.selectedGroupID}/subGroups/${this.state.selectedSubGroupID}/chats`\n          ).once(\"value\", (snapshot) => {\n            const chats = [];\n            snapshot.forEach((snap) => {\n              chats.push(snap.val());\n            });\n\n            chats.sort((a, b) => {\n              return a.timestamp - b.timestamp;\n            });\n\n            this.setState({ chats });\n          });\n          this.setState({ loadingChats: false });\n          container.scrollTop = container.scrollHeight;\n        }\n      });\n    } catch (error) {\n      this.setState({ readError: error.message });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // Set taskboard listener when a group is selected and remove for the old taskboard\n    if (\n      this.state.selectedGroupID &&\n      this.state.selectedGroupID !== prevState.selectedGroupID\n    ) {\n      db.ref(`taskboards/${prevState.selectedGroupID}`).off(\"value\");\n      try {\n        db.ref(`taskboards/${this.state.selectedGroupID}`).on(\n          \"value\",\n          (snapshot) => {\n            const boards = [];\n            snapshot.forEach((board) => {\n              const boardVal = board.val();\n              boards.push({\n                id: board.key,\n                ...boardVal,\n              });\n            });\n            this.setState({ boards });\n          }\n        );\n      } catch (error) {\n        this.setState({ readError: error.message });\n      }\n\n      const subGroupsList = new Map();\n      try {\n        db.ref(\n          `users/${this.state.user.uid}/groups/${this.state.selectedGroupID}/subGroups`\n        ).on(\"value\", (snapshot) => {\n          snapshot.forEach((snap) => {\n            subGroupsList.set(snap.key, snap.val());\n          });\n          this.setState({ usrSubGroups: subGroupsList });\n        });\n      } catch (error) {\n        this.setState({ readError: error.message });\n      }\n\n      db.ref(`groups/${prevState.selectedGroupID}/subGroups`).off(\"value\");\n      try {\n        db.ref(`groups/${this.state.selectedGroupID}/subGroups`).on(\n          \"value\",\n          (snapshot) => {\n            const subGroups_temp = new Map();\n            subGroups_temp.set(\n              this.state.selectedGroupID,\n              this.state.groups.get(this.state.selectedGroupID)\n            );\n            snapshot.forEach((snap) => {\n              if (subGroupsList.has(snap.key)) {\n                subGroups_temp.set(snap.key, snap.val());\n              }\n            });\n            this.setState({ subGroups: subGroups_temp });\n          }\n        );\n      } catch (error) {\n        this.setState({ readError: error.message });\n      }\n\n      db.ref(`groups/${prevState.selectedGroupID}/members`).off(\"value\");\n      try {\n        db.ref(`groups/${this.state.selectedGroupID}/members`).on(\n          \"value\",\n          (snapshot) => {\n            const members_temp = new Map();\n            snapshot.forEach((snap) => {\n              members_temp.set(snap.key, snap.val());\n            });\n            this.setState({ groupMembers: members_temp });\n          }\n        );\n      } catch (error) {\n        this.setState({ readError: error.message });\n      }\n    }\n  }\n\n  async componentWillUnmount() {\n    db.ref(\"users\").off(\"value\");\n    db.ref(\"chats\").off(\"value\");\n    db.ref(`users/${this.state.user.uid}/groups`).off(\"value\");\n    db.ref(`groups`).off(\"value\");\n    db.ref(\"members\").off(\"value\");\n    db.ref(\"subGroups\").off(\"value\");\n  }\n\n  refreshGroups() {\n    try {\n      db.ref(`groups`).once(\"value\", (snapshot) => {\n        const groupsTemp = new Map();\n        snapshot.forEach((snap) => {\n          if (this.state.usrGroups.has(snap.key)) {\n            groupsTemp.set(snap.key, snap.val());\n          }\n        });\n        this.setState({ groups: groupsTemp });\n        if (!this.state.selectedGroupID) {\n          this.setState({\n            selectedGroupID: this.state.groups.keys().next().value,\n          });\n        }\n\n        const subGroupsList = new Map();\n        try {\n          db.ref(\n            `users/${this.state.user.uid}/groups/${this.state.selectedGroupID}/subGroups`\n          ).on(\"value\", (snapshot) => {\n            snapshot.forEach((snap) => {\n              subGroupsList.set(snap.key, snap.val());\n            });\n            this.setState({ usrSubGroups: subGroupsList });\n          });\n        } catch (error) {\n          this.setState({ readError: error.message });\n        }\n\n        db.ref(`groups/${this.state.selectedGroupID}/subGroups`).once(\n          \"value\",\n          (snapshot) => {\n            const subGroups_temp = new Map();\n            subGroups_temp.set(\n              this.state.selectedGroupID,\n              this.state.groups.get(this.state.selectedGroupID)\n            );\n            snapshot.forEach((snap) => {\n              if (subGroupsList.has(snap.key)) {\n                subGroups_temp.set(snap.key, snap.val());\n              }\n            });\n            this.setState({ subGroups: subGroups_temp });\n          }\n        );\n\n        db.ref(`groups/${this.state.selectedGroupID}/chats`).once(\n          \"value\",\n          (snapshot) => {\n            const chats = [];\n            snapshot.forEach((snap) => {\n              chats.push(snap.val());\n            });\n\n            chats.sort((a, b) => {\n              return a.timestamp - b.timestamp;\n            });\n\n            this.setState({ chats });\n          }\n        );\n        this.setState({ loadingChats: false });\n      });\n    } catch (error) {\n      this.setState({ readError: error.message });\n    }\n    let container = document.querySelector(\".msg-mid\");\n    container.scrollTop = container.scrollHeight;\n  }\n\n  handleChange(event) {\n    this.setState({\n      content: event.target.value,\n    });\n  }\n\n  handleSelectGroup = (event) => {\n    if (event.target.id) {\n      this.setState({\n        selectedGroupID: event.target.id,\n        selectedGroupName: this.state.groups.get(event.target.id).name,\n        selectedSubGroupName: this.state.groups.get(event.target.id).name,\n      });\n\n      db.ref(`groups/${event.target.id}/chats`).once(\"value\", (snapshot) => {\n        const chats = [];\n        snapshot.forEach((snap) => {\n          chats.push(snap.val());\n        });\n\n        chats.sort((a, b) => {\n          return a.timestamp - b.timestamp;\n        });\n\n        this.setState({ chats });\n      });\n    } else {\n      this.setState({\n        selectedGroupID: event.currentTarget.id,\n        selectedGroupName: this.state.groups.get(event.currentTarget.id).name,\n        selectedSubGroupName: \"Main Group\",\n      });\n\n      db.ref(`groups/${event.currentTarget.id}/chats`).once(\n        \"value\",\n        (snapshot) => {\n          let chats = [];\n          snapshot.forEach((snap) => {\n            chats.push(snap.val());\n          });\n\n          chats.sort(function (a, b) {\n            return a.timestamp - b.timestamp;\n          });\n\n          this.setState({ chats });\n        }\n      );\n    }\n  };\n\n  handleSelectSubGroup = (event) => {\n    if (event.target.id === this.state.selectedGroupID) {\n      this.setState({\n        selectedGroupID: event.target.id,\n        selectedGroupName: this.state.groups.get(event.target.id).name,\n        selectedSubGroupID: \"-1\",\n        selectedSubGroupName: \"Main Group\",\n      });\n\n      db.ref(`groups/${event.target.id}/chats`).once(\"value\", (snapshot) => {\n        const chats = [];\n        snapshot.forEach((snap) => {\n          chats.push(snap.val());\n        });\n\n        chats.sort((a, b) => {\n          return a.timestamp - b.timestamp;\n        });\n\n        this.setState({ chats });\n      });\n    } else {\n      this.setState({\n        selectedSubGroupID: event.target.id,\n        selectedSubGroupName: this.state.subGroups.get(event.target.id).name,\n      });\n\n      db.ref(\n        `groups/${this.state.selectedGroupID}/subGroups/${event.target.id}/chats`\n      ).once(\"value\", (snapshot) => {\n        const chats = [];\n        snapshot.forEach((snap) => {\n          chats.push(snap.val());\n        });\n\n        chats.sort((a, b) => {\n          return a.timestamp - b.timestamp;\n        });\n        this.setState({ chats });\n      });\n    }\n  };\n\n  handleCreateTaskboard = async () => {\n    if (!this.state.user.uid || !this.state.selectedGroupID) {\n      console.log(\"UserID or Group ID is empty\");\n      return;\n    }\n    try {\n      const boardId = await createTaskboard(\n        this.state.user.uid,\n        this.state.selectedGroupID\n      );\n      localStorage.setItem(\"groupId\", this.state.selectedGroupID);\n      this.props.history.push(`/taskboard?id=${boardId}`);\n    } catch (err) {\n      console.error(`An error occurred when creating a new taskboard`, err);\n    }\n  };\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    this.setState({ writeError: null });\n    //const chatArea = this.myRef.current;\n\n    if (!(this.state.selectedSubGroupID === \"-1\")) {\n      try {\n        await db\n          .ref(\n            `groups/${this.state.selectedGroupID}/subGroups/${this.state.selectedSubGroupID}/chats`\n          )\n          .push({\n            content: this.state.content,\n            timestamp: Date.now(),\n            uid: this.state.user.uid,\n          });\n        this.setState({ content: \"\" });\n        //chatArea.scrollBy(0, chatArea.scrollHeight);\n      } catch (error) {\n        this.setState({ writeError: error.message });\n      }\n      let container = document.querySelector(\".msg-mid\");\n      container.scrollTop = container.scrollHeight;\n    } else {\n      try {\n        await db.ref(`groups/${this.state.selectedGroupID}/chats`).push({\n          content: this.state.content,\n          timestamp: Date.now(),\n          uid: this.state.user.uid,\n        });\n        this.setState({ content: \"\" });\n        //chatArea.scrollBy(0, chatArea.scrollHeight);\n      } catch (error) {\n        this.setState({ writeError: error.message });\n      }\n      let container = document.querySelector(\".msg-mid\");\n      container.scrollTop = container.scrollHeight;\n    }\n  }\n\n  formatTime(timestamp) {\n    const d = new Date(timestamp);\n    const time = `${d.getDate()}/${\n      d.getMonth() + 1\n    }/${d.getFullYear()} ${d.getHours()}:${d.getMinutes()}`;\n    return time;\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div id=\"chat\" className=\"\">\n        <div className=\"messaging\">\n          <div className=\"inbox_msg\">\n            <div className=\"inbox_people\">\n              <div className=\"headind_srch\">\n                <div className=\"recent_heading\">\n                  <h4>Recent</h4>\n                </div>\n                <div className=\"srch_bar\">\n                  <div className=\"stylish-input-group\">\n                    <input\n                      type=\"text\"\n                      className=\"search-bar\"\n                      placeholder=\"Search\"\n                    />\n                    <span className=\"input-group-addon\">\n                      <button type=\"button\">\n                        {\" \"}\n                        <FontAwesomeIcon\n                          icon={faSearch}\n                          aria-hidden=\"true\"\n                        />{\" \"}\n                      </button>\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <div\n                className=\"inbox_chat\"\n                style={{ overflowY: \"auto\", paddingBottom: \"10%\" }}\n              >\n                {Array.from(this.state.groups.values()).map((result, index) => {\n                  return (\n                    <div\n                      key={result.id}\n                      id={result.id}\n                      className={\n                        result.id === this.state.selectedGroupID\n                          ? \"chat_list active_chat\"\n                          : \"chat_list\"\n                      }\n                      onClick={this.handleSelectGroup}\n                    >\n                      <div className=\"chat_people\">\n                        <div className=\"chat_img\">\n                          {\" \"}\n                          <img\n                            src=\"https://ptetutorials.com/images/user-profile.png\"\n                            alt=\"group-no\"\n                          />{\" \"}\n                        </div>\n                        <div className=\"chat_ib\">\n                          <h5>\n                            {result.name}{\" \"}\n                            <span\n                              className=\"chat_date\"\n                              style={{ display: \"none\" }}\n                            >\n                              Dec 25\n                            </span>\n                          </h5>\n                          <p>{result.description}</p>\n                        </div>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <div className=\"create_group_fab\">\n                <CreateGroup\n                  className=\"create_group_fab\"\n                  users={this.state.users}\n                  groups={this.state.groups}\n                  refreshGroups={this.refreshGroups}\n                />\n              </div>\n            </div>\n            <div className=\"mesgs\">\n              {/*ref={this.myRef}*/}\n\n              {/* chat area */}\n              <div className=\"msg_history\">\n                <div className=\"msg-top\">\n                  <div className=\"group_header\">\n                    <div className=\"group_labels\">\n                      <strong className=\"grp-label\">\n                        {this.state.selectedGroupName || \"Group Name\"}\n                      </strong>\n                      <strong className=\"sub-grp-label\">\n                        {this.state.selectedSubGroupName}\n                      </strong>\n                    </div>\n                  </div>\n\n                  <div className=\"taskboard_menu\">\n                    <div className=\"create_taskboard_btn\">\n                      <button\n                        type=\"button\"\n                        onClick={this.handleCreateTaskboard}\n                      >\n                        <Typography>Create New Taskboard</Typography>\n                      </button>\n                    </div>\n                    <div>\n                      <FormControl className={classes.list}>\n                        <Select\n                          labelId=\"demo-simple-select-label\"\n                          id=\"demo-simple-select\"\n                          value=\"\"\n                          displayEmpty\n                        >\n                          <MenuItem value=\"\" disabled>\n                            Select a Taskboard\n                          </MenuItem>\n                          {this.state.boards.map((board) => {\n                            return (\n                              <MenuItem key={board.id} value={board.id}>\n                                <Link\n                                  to={`/taskboard?id=${board.id}`}\n                                  onClick={() =>\n                                    localStorage.setItem(\n                                      \"groupId\",\n                                      this.state.selectedGroupID\n                                    )\n                                  }\n                                >\n                                  {board.name}\n                                </Link>\n                              </MenuItem>\n                            );\n                          })}\n                        </Select>\n                      </FormControl>\n                    </div>\n                  </div>\n\n                  <div className=\"subgroup_menu\">\n                    <div className=\"create_subgroup_btn\">\n                      <CreateSubGroup\n                        className=\"addSubGroup\"\n                        users={this.state.users}\n                        groups={this.state.groups}\n                        selectedGroupID={this.state.selectedGroupID}\n                        selecteGroupName={this.state.selectedGroupName}\n                        groupMembers={this.state.groupMembers}\n                        refreshGroups={this.refreshGroups}\n                      />\n                    </div>\n                    <div>\n                      <FormControl className={classes.list}>\n                        <Select\n                          labelId=\"demo-simple-select-label\"\n                          id=\"demo-simple-select\"\n                          value=\"\"\n                          displayEmpty\n                        >\n                          <MenuItem value=\"\" disabled>\n                            Select a Subgroup\n                          </MenuItem>\n                          {Array.from(this.state.subGroups.values()).map(\n                            (result, index) => {\n                              return (\n                                <MenuItem\n                                  key={result.id}\n                                  id={result.id}\n                                  value={result.id}\n                                  onClick={this.handleSelectSubGroup}\n                                >\n                                  {result.name}\n                                </MenuItem>\n                              );\n                            }\n                          )}\n                        </Select>\n                      </FormControl>\n                    </div>\n                  </div>\n                </div>\n\n                {/* loading indicator */}\n                {this.state.loadingChats ? (\n                  <div\n                    className=\"spinner-border text-success\"\n                    role=\"status\"\n                    style={{\n                      display: \"flex\",\n                      marginLeft: \"auto\",\n                      marginRight: \"auto\",\n                      marginTop: \"1em\",\n                      marginBottom: \"1em\",\n                    }}\n                  >\n                    <span className=\"sr-only\" style={{}}>\n                      Loading...\n                    </span>\n                  </div>\n                ) : (\n                  <div className=\"msg-mid\">\n                    {this.state.chats.map((chat) => {\n                      return (\n                        <div\n                          key={chat.timestamp}\n                          className={\n                            this.state.user.uid === chat.uid\n                              ? \"outgoing_msg\"\n                              : \"incoming_msg\"\n                          }\n                        >\n                          {this.state.user.uid === chat.uid ? (\n                            \"\"\n                          ) : (\n                            <div className=\"incoming_msg_img\">\n                              {\" \"}\n                              <img\n                                src={\n                                  this.state.users.get(chat.uid).profilePic\n                                    ? this.state.users.get(chat.uid).profilePic\n                                    : \"https://ptetutorials.com/images/user-profile.png\"\n                                }\n                                alt=\"sunil\"\n                              />{\" \"}\n                            </div>\n                          )}\n                          {this.state.user.uid === chat.uid ? (\n                            <div className=\"sent_msg\">\n                              <p>{chat.content}</p>\n                              <span className=\"time_date\">\n                                {this.formatTime(chat.timestamp)}\n                              </span>\n                            </div>\n                          ) : (\n                            <div className=\"received_msg\">\n                              <div className=\"received_withd_msg\">\n                                <div className=\"name-header\">\n                                  {this.state.users.has(chat.uid)\n                                    ? !this.state.users.get(chat.uid).name\n                                      ? this.state.users.get(chat.uid).email\n                                      : this.state.users.get(chat.uid).name\n                                    : \"Anonymous\"}\n                                </div>\n                                <p>{chat.content}</p>\n                                <span className=\"time_date\">\n                                  {this.formatTime(chat.timestamp)}\n                                </span>\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                      );\n                    })}\n                  </div>\n                )}\n\n                <form\n                  onKeyDown={this._handleKeyDown}\n                  onSubmit={this.handleSubmit}\n                  className=\"type_msg\"\n                >\n                  <textarea\n                    type=\"text\"\n                    placeholder=\"Type a message\"\n                    className=\"form-control write_msg\"\n                    name=\"content\"\n                    onChange={this.handleChange}\n                    value={this.state.content}\n                  ></textarea>\n                  {this.state.error ? (\n                    <p className=\"text-danger\">{this.state.error}</p>\n                  ) : null}\n                  <button className=\"msg_send_btn\" type=\"submit\">\n                    <FontAwesomeIcon icon={faPaperPlane} aria-hidden=\"true\" />\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(withStyles(useStyles)(Chat));\n","import React from \"react\";\nimport \"./TaskDescription.scss\";\nimport { Button, Typography } from \"@material-ui/core\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { updateTask } from \"../../../helpers/db\";\n\nconst TaskDescription = ({ columnId, taskDetails }) => {\n  const [newDescription, setNewDescription] = React.useState(\"\");\n  const [isEditing, setIsEditing] = React.useState(\n    taskDetails.description.length === 0\n  );\n\n  const submitNewDescription = async () => {\n    if (taskDetails.description === newDescription) {\n      stopEditing();\n      return;\n    }\n    try {\n      await updateTask(columnId, taskDetails.id, {\n        description: newDescription,\n      });\n      stopEditing();\n    } catch (err) {\n      console.log(\"an error occured when saving new description\", err);\n    }\n  };\n\n  const handleStartEditing = () => {\n    setNewDescription(taskDetails.description);\n    setIsEditing(true);\n  };\n\n  const handleChangeDescription = (e) => {\n    setNewDescription(e.target.value);\n  };\n\n  const stopEditing = () => {\n    setNewDescription(\"\");\n    setIsEditing(false);\n  };\n\n  return (\n    <div className=\"task-description\">\n      <div className=\"title-lockup\">\n        <Typography variant=\"h5\" component=\"h2\">\n          Description\n        </Typography>\n        {!isEditing && <Button onClick={handleStartEditing}>Edit</Button>}\n      </div>\n      {isEditing ? (\n        <div className=\"editing-lockup\">\n          <textarea\n            label=\"Description\"\n            value={newDescription}\n            onChange={handleChangeDescription}\n            placeholder=\"Add a more detailed description\"\n            rows={5}\n          />\n          <div className=\"button-lockup\">\n            <Button onClick={submitNewDescription}>Save</Button>\n            <Button onClick={stopEditing}>\n              <FontAwesomeIcon icon={faTimes} size=\"2x\" />\n            </Button>\n          </div>\n        </div>\n      ) : (\n        <Typography>\n          {taskDetails.description || \"Add a more detailed description... \"}\n        </Typography>\n      )}\n    </div>\n  );\n};\n\nexport default TaskDescription;\n","import React from \"react\";\nimport \"./NewTaskComment.scss\";\nimport { Button } from \"@material-ui/core\";\nimport { createComment } from \"../../../helpers/db\";\nimport { auth } from \"../../../services/firebase\";\n\nconst NewTaskComment = ({ taskId }) => {\n  const [text, setText] = React.useState(\"\");\n\n  const handleChangeComment = (e) => {\n    setText(e.target.value);\n  };\n  const submitComment = async () => {\n    let userId = auth().currentUser.uid;\n    try {\n      await createComment(taskId, {\n        text,\n        createdBy: userId,\n        lastUpdatedTimestamp: Date.now(),\n      });\n      setText(\"\");\n    } catch (err) {\n      console.log(\"An error occurred when submitting the comment\");\n    }\n  };\n  return (\n    <div className=\"new-task-comment-lockup\">\n      <textarea\n        label=\"Description\"\n        value={text}\n        onChange={handleChangeComment}\n        placeholder=\"Write a comment...\"\n        variant=\"outlined\"\n        rows={2}\n      />\n      {text.length > 0 && <Button onClick={submitComment}>Save</Button>}\n    </div>\n  );\n};\n\nexport default NewTaskComment;\n","import React, { useEffect } from \"react\";\nimport \"./TaskActivity.scss\";\nimport { Typography } from \"@material-ui/core\";\nimport NewTaskComment from \"../NewTaskComment/NewTaskComment\";\nimport { db } from \"../../../services/firebase\";\nimport { getUserById, deleteComment } from \"../../../helpers/db\";\nimport moment from \"moment\";\n\nconst TaskActivity = ({ columnId, taskDetails }) => {\n  const [comments, setComments] = React.useState([]);\n  const [usernameMap, setUsernameMap] = React.useState({});\n\n  useEffect(() => {\n    try {\n      const columns = db.ref(`taskComments/${taskDetails.id}`);\n      columns.on(\"value\", async (snapshot) => {\n        const tmpComments = [];\n        snapshot.forEach((comment) => {\n          const val = comment.val();\n          if (val.deletedTimestamp) return; // Don't display deleted columns\n          // TODO: Unshift isnt the best to use here for displaying tasks with most recent first, can sort the list (potentially from firebase) or something else but works for now\n          tmpComments.unshift({\n            id: comment.key,\n            ...val,\n          });\n        });\n\n        // TODO: Look at caching names\n        const tmpUsernameMap = {};\n        await Promise.all(\n          tmpComments.map(async (comment) => {\n            const user = await getUserById(comment.createdBy);\n            tmpUsernameMap[comment.createdBy] = user.val().name;\n          })\n        );\n        setUsernameMap(tmpUsernameMap);\n        setComments(tmpComments);\n      });\n    } catch (err) {\n      alert(`An error occurred when getting comments... ${err.message}`); // TODO: Dont use an alert, do this properly...\n    }\n    return () => db.ref(`taskComments/${taskDetails.id}`).off(\"value\");\n  }, [taskDetails.id]);\n\n  const handleDeleteComment = async (commentId) => {\n    try {\n      await deleteComment(taskDetails.id, commentId);\n    } catch (err) {\n      console.log(\"An error occurred when deleting comment\", err);\n    }\n  };\n\n  return (\n    <div className=\"task-activity\">\n      <div className=\"title-lockup\">\n        <Typography variant=\"h5\" component=\"h2\">\n          Activity:\n        </Typography>\n      </div>\n      <NewTaskComment taskId={taskDetails.id} />\n      <ul>\n        {comments.map((comment) => {\n          return (\n            <li key={comment.id}>\n              <div key={comment.id} className=\"comment\">\n                <Typography className=\"comment-username\">\n                  {usernameMap[comment.createdBy]}\n                </Typography>\n                <p className=\"comment-timestamp\">\n                  {moment\n                    .utc(parseInt(comment.lastUpdatedTimestamp))\n                    .fromNow(true)}\n                </p>\n                <Typography className=\"comment-text\">{comment.text}</Typography>\n              </div>\n              <div className=\"button-lockup\">\n                <p onClick={() => handleDeleteComment(comment.id)}>Delete</p>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default TaskActivity;\n","import React, { useState, useEffect } from \"react\";\nimport \"./TaskTodos.scss\";\nimport { Button, Checkbox, Typography } from \"@material-ui/core\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  createTaskTodo,\n  deleteTaskTodo,\n  updateTaskTodoStatus,\n} from \"../../../helpers/db\";\n\nconst TaskTodos = ({ columnId, taskDetails }) => {\n  const [newTodo, setNewTodo] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [\n    completedTodosPercentage,\n    setCompletedTodosPercentage,\n  ] = React.useState(0);\n\n  useEffect(() => {\n    if (!taskDetails.todos) {\n      setTodos([]);\n      return;\n    }\n    let todosCount = 0;\n    let todosCompleted = 0;\n    const newList = Object.keys(taskDetails.todos).map((key) => {\n      const todo = taskDetails.todos[key];\n      todosCount++;\n      todosCompleted += todo.isComplete ? 1 : 0;\n      return {\n        id: key,\n        ...todo,\n      };\n    });\n    setTodos(newList);\n    const newPercentage = ((todosCompleted / todosCount) * 100).toFixed(0);\n    setCompletedTodosPercentage(newPercentage);\n  }, [taskDetails.todos]);\n\n  const handleCreateTodo = async (e) => {\n    e.preventDefault();\n    if (!newTodo) {\n      return;\n    }\n    try {\n      await createTaskTodo(columnId, taskDetails.id, {\n        text: newTodo,\n        isComplete: false,\n      });\n      setNewTodo(\"\");\n    } catch (err) {\n      console.log(\"An error occurred when creating task todo\");\n    }\n  };\n  const handleUpdateNewTodoText = (e) => {\n    setNewTodo(e.target.value);\n  };\n\n  const handleUpdateTodoStatus = async (id) => {\n    try {\n      await updateTaskTodoStatus(\n        columnId,\n        taskDetails.id,\n        id,\n        !taskDetails.todos[id].isComplete\n      );\n    } catch (err) {\n      console.log(\"An error occurred when trying to update todo status\", err);\n    }\n  };\n\n  const handleRemoveTodo = async (id) => {\n    try {\n      await deleteTaskTodo(columnId, taskDetails.id, id);\n    } catch (err) {\n      console.log(\"An error occurred when removing todo\", err);\n    }\n  };\n\n  return (\n    <div className=\"task-todos-lockup\">\n      <div className=\"title-lockup\">\n        <Typography variant=\"h5\" component=\"h2\">\n          Task Items\n        </Typography>\n      </div>\n      <div className=\"task-grid-lockup\">\n        <div className=\"todo-list-lockup\">\n          {todos.length > 0 ? (\n            <ul>\n              {todos.map((todo, index) => {\n                return (\n                  <li key={index}>\n                    <div className=\"todo-lockup\">\n                      <Checkbox\n                        onChange={() => handleUpdateTodoStatus(todo.id)}\n                        checked={todo.isComplete}\n                        inputProps={{ \"aria-label\": \"primary checkbox\" }}\n                      />\n                      <Typography>{todo.text}</Typography>\n                      <div className=\"button-lockup\">\n                        <Button onClick={() => handleRemoveTodo(todo.id)}>\n                          <FontAwesomeIcon icon={faTimes} size=\"2x\" />\n                        </Button>\n                      </div>\n                    </div>\n                  </li>\n                );\n              })}\n            </ul>\n          ) : (\n            <Typography>\n              No progress items have been set for this task\n            </Typography>\n          )}\n        </div>\n        <div className=\"todo-progress-lockup\">\n          {todos.length > 0 && (\n            <Typography variant=\"h5\">\n              {completedTodosPercentage}% Completed\n            </Typography>\n          )}\n        </div>\n      </div>\n      <div className=\"create-todo-lockup\">\n        <form onSubmit={handleCreateTodo}>\n          <input\n            onChange={handleUpdateNewTodoText}\n            value={newTodo}\n            placeholder=\"Enter progress item name...\"\n          />\n          <button type=\"submit\">Save</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskTodos;\n","import React from \"react\";\nimport \"./TaskDelete.scss\";\nimport { deleteTask } from \"../../../helpers/db\";\nimport { Button } from \"@material-ui/core\";\n\nconst TaskDelete = ({ columnId, taskDetails, close }) => {\n  const handleDeleteTask = async () => {\n    try {\n      await deleteTask(columnId, taskDetails.id);\n      console.log(\"Delete pressed\" + columnId + \" \" + taskDetails.id);\n      close();\n    } catch (err) {\n      alert(`An error occurred when deleting column ${err.message}`); // TODO: Dont use alerts for error messages..\n    }\n  };\n\n  return (\n    <div className=\"task-delete\">\n      <div className=\"button-lockup\">\n        <Button onClick={() => handleDeleteTask()}>Delete</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskDelete;\n","import React from \"react\";\nimport { Button, Typography } from \"@material-ui/core\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./TaskDetails.scss\";\nimport TaskDescription from \"../TaskDescription/TaskDescription\";\nimport TaskActivity from \"../TaskActivity/TaskActivity\";\nimport TaskTodos from \"../TaskTodos/TaskTodos\";\nimport { updateTask } from \"../../../helpers/db\";\nimport TaskDelete from \"../TaskDelete/TaskDelete\";\n\nconst TaskDetails = ({ columnId, taskDetails, close }) => {\n  const [newTaskName, setNewTaskName] = React.useState(\"\");\n  const [isEditingTaskName, setIsEditingTaskName] = React.useState(false);\n  const submitNewTaskName = async () => {\n    if (taskDetails.name === newTaskName) {\n      stopEditing();\n      return;\n    }\n    try {\n      await updateTask(columnId, taskDetails.id, {\n        name: newTaskName,\n      });\n      stopEditing();\n    } catch (err) {\n      console.log(\"err is \", err);\n    }\n  };\n\n  const handleStartEditing = () => {\n    setNewTaskName(taskDetails.name);\n    setIsEditingTaskName(true);\n  };\n\n  const handleChangeName = (e) => {\n    setNewTaskName(e.target.value);\n  };\n  const stopEditing = () => {\n    setNewTaskName(\"\");\n    setIsEditingTaskName(false);\n  };\n\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      return submitNewTaskName();\n    }\n  };\n\n  return (\n    <div className=\"task-details-lockup\">\n      <div className=\"header\">\n        {isEditingTaskName ? (\n          <input\n            onChange={handleChangeName}\n            onBlur={submitNewTaskName}\n            onKeyPress={handleKeyPress}\n            value={newTaskName}\n            placeholder=\"Enter a title for this card...\"\n          />\n        ) : (\n          <Typography variant=\"h4\" component=\"h1\" onClick={handleStartEditing}>\n            {taskDetails.name}\n          </Typography>\n        )}\n        <Button onClick={close}>\n          <FontAwesomeIcon icon={faTimes} size=\"1x\" />\n        </Button>\n      </div>\n      <div className=\"grid-lockup\">\n        <div className=\"main-col\">\n          {/* <div className=\"task-detail\"></div> */}\n          <TaskDescription columnId={columnId} taskDetails={taskDetails} />\n          <TaskTodos columnId={columnId} taskDetails={taskDetails} />\n          <TaskActivity columnId={columnId} taskDetails={taskDetails} />\n        </div>\n        <div className=\"sidebar\">\n          <TaskDelete\n            columnId={columnId}\n            taskDetails={taskDetails}\n            close={close}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskDetails;\n","import React, { useEffect } from \"react\";\nimport \"./Modal.scss\";\n\nconst Modal = ({ closeModal, children }) => {\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      // Used to close modals on Escape\n      if (event.key === \"Escape\") {\n        closeModal();\n      }\n    };\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [closeModal]);\n\n  return (\n    <div>\n      <div className=\"modalOverlay\" />\n      <div className=\"modalContent\">{children}</div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { useEffect } from \"react\";\nimport \"./TaskColumn.scss\";\nimport { Button, Card, CardContent, Typography } from \"@material-ui/core\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  deleteTaskColumn,\n  createTask,\n  updateTaskColumn,\n} from \"../../../helpers/db\";\nimport { db } from \"../../../services/firebase\";\nimport TaskDetails from \"../TaskDetails/TaskDetails\";\nimport Modal from \"../Modal/Modal\";\n\nconst TaskColumn = ({ boardId, column, user }) => {\n  const [tasks, setTasks] = React.useState(new Map());\n  const [newTask, setNewTask] = React.useState(\"\");\n  const [selectedTaskId, setSelectedTaskId] = React.useState(\"\");\n\n  useEffect(() => {\n    try {\n      const tasks = db.ref(`tasks/${column.id}`);\n      tasks.on(\"value\", (snapshot) => {\n        const tmpTasks = new Map();\n        snapshot.forEach((col) => {\n          const val = col.val();\n          if (val.deletedTimestamp) return; // Don't display deleted tasks\n          tmpTasks.set(col.key, {\n            id: col.key,\n            ...val,\n          });\n        });\n        setTasks(tmpTasks);\n      });\n    } catch (err) {\n      alert(`An error occurred when reading data... ${err.message}`); // TODO: Dont use an alert, do this properly...\n    }\n    return () => db.ref(`tasks/${column.id}`).off(\"value\");\n  }, [column.id]);\n\n  const handleDeleteColumn = async () => {\n    try {\n      await deleteTaskColumn(boardId, column.id);\n    } catch (err) {\n      alert(`An error occurred when deleting column ${err.message}`); // TODO: Dont use alerts for error messages..\n    }\n  };\n\n  const handleCreateTask = async (e) => {\n    e.preventDefault();\n    if (!newTask) return; // Dont want to add tasks with empty names\n    const task = {\n      name: newTask,\n      description: \"\",\n      createdTimeStamp: Date.now(),\n      createdBy: user.uid,\n      deletedTimestamp: null,\n    };\n\n    try {\n      await createTask(column.id, task);\n      setNewTask(\"\");\n    } catch (err) {\n      alert(`An error occurred when deleting column ${err.message}`);\n    }\n  };\n\n  const handleMoveTask = async (targetListId, sourceListId, taskId) => {\n    try {\n      await updateTaskColumn(targetListId, sourceListId, taskId);\n    } catch (err) {\n      alert(`An error occurred when deleting column ${err.message}`);\n    }\n  };\n\n  const handleNewTaskChange = (e) => {\n    setNewTask(e.target.value);\n  };\n\n  const handleCloseModal = () => {\n    setSelectedTaskId(\"\");\n  };\n\n  const handleDragStart = (e) => {\n    e.dataTransfer.setData(\"text/plain\", e.target.id);\n  };\n\n  const handleDragOver = (e) => {\n    e.preventDefault();\n  };\n\n  const handleDrop = (e) => {\n    e.preventDefault();\n\n    const sourceId = e.dataTransfer.getData(\"text/plain\");\n    const sourceEl = document.getElementById(sourceId);\n    const targetEl = document.getElementById(e.target.id);\n    if (!targetEl || !sourceEl) {\n      return;\n    }\n\n    // TODO: Fix this\n    const sourceTaskList = sourceEl.closest(\"div\");\n    const sourceTaskListId = sourceTaskList.id;\n\n    const targetTaskList = targetEl.closest(\"div\");\n    const targetTaskListId = targetTaskList.id;\n\n    if (sourceTaskListId !== targetTaskListId) {\n      handleMoveTask(targetTaskListId, sourceTaskListId, sourceId);\n    } else {\n      //TODO: Fix later\n    }\n  };\n\n  return (\n    <div className=\"task-column-container\">\n      <div className=\"task-column-lockup\">\n        <div className=\"header-lockup\">\n          <Typography variant=\"h5\" component=\"h2\">\n            {column.name}\n          </Typography>\n          <FontAwesomeIcon\n            onClick={handleDeleteColumn}\n            icon={faTimes}\n            size=\"1x\"\n          />\n        </div>\n        <div\n          id={column.id}\n          className=\"task-list drop-zone\"\n          onDrop={(e) => handleDrop(e)}\n          onDragStart={(e) => handleDragStart(e)}\n          onDragOver={(e) => handleDragOver(e)}\n        >\n          <ul>\n            {Array.from(tasks.values()).map((task) => {\n              return (\n                <li\n                  key={task.id}\n                  id={task.id}\n                  draggable=\"true\"\n                  onClick={(e) => setSelectedTaskId(task.id)}\n                >\n                  <Card variant=\"outlined\">\n                    <CardContent className=\"dropzone\" id={task.id}>\n                      <Typography color=\"textPrimary\" gutterBottom>\n                        {task.name}\n                      </Typography>\n                    </CardContent>\n                  </Card>\n                </li>\n              );\n            })}\n            <li className=\"new-task-lockup\">\n              <div>\n                <form onSubmit={handleCreateTask}>\n                  <input\n                    onChange={handleNewTaskChange}\n                    value={newTask}\n                    placeholder=\"Enter a title for this card...\"\n                  />\n                  <Button type=\"submit\">Add Task</Button>\n                </form>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n      {!!selectedTaskId && tasks.get(selectedTaskId) && (\n        <Modal closeModal={handleCloseModal}>\n          <TaskDetails\n            columnId={column.id}\n            taskDetails={tasks.get(selectedTaskId)}\n            close={handleCloseModal}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default TaskColumn;\n","import React from \"react\";\nimport \"./NewTaskColumn.scss\";\nimport { faTimes, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button, Typography } from \"@material-ui/core\";\nimport { createTaskColumn } from \"../../../helpers/db\";\n\nconst NewTaskColumn = ({ boardId }) => {\n  const [isEditing, setIsEditing] = React.useState(false);\n  const [name, setName] = React.useState(\"\");\n\n  const handleSetIsEditing = () => {\n    setIsEditing(!isEditing);\n  };\n\n  const handleNameChange = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleCancelEditing = () => {\n    setIsEditing(false);\n    setName(\"\");\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (name === \"\") {\n      return;\n    }\n    try {\n      await createTaskColumn(boardId, name);\n      handleCancelEditing();\n    } catch (err) {\n      alert(`An error occurred when creating a new column ${err.message}`);\n    }\n  };\n\n  return (\n    <div id=\"new-task-column-container\">\n      <form onSubmit={handleSubmit}>\n        {isEditing ? (\n          <div id=\"add-column-selected\">\n            <input\n              onChange={handleNameChange}\n              value={name}\n              placeholder=\"Enter list name...\"\n            />\n            <div id=\"button-lockup\">\n              <Button type=\"submit\">Add List</Button>\n              <Button onClick={handleCancelEditing}>\n                <FontAwesomeIcon icon={faTimes} size=\"2x\" />\n              </Button>\n            </div>\n          </div>\n        ) : (\n          <div id=\"add-column\">\n            <button onClick={handleSetIsEditing}>\n              <FontAwesomeIcon icon={faPlus} size=\"1x\" />\n              <Typography component=\"p\">Add another list</Typography>\n            </button>\n          </div>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default NewTaskColumn;\n","import React, { useEffect } from \"react\";\nimport \"./TaskboardNavbar.scss\";\nimport { Button, Typography } from \"@material-ui/core\";\nimport {\n  faEdit,\n  faCheckCircle,\n  faTimesCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { deleteTaskboard, updateTaskboard } from \"../../../helpers/db\";\n\nconst TaskboardNavbar = ({ groupId, taskboard }) => {\n  const [isEditingTitle, setIsEditingTitle] = React.useState(false);\n  const [newTitleText, setNewTitleText] = React.useState(\"\");\n  const [titleText, setTitleText] = React.useState(\"\");\n\n  useEffect(() => {\n    setTitleText(taskboard.name);\n  }, [taskboard.name]);\n\n  const handleTitleChange = (e) => {\n    setNewTitleText(e.target.value);\n  };\n\n  const handleDeleteTaskboard = async () => {\n    try {\n      await deleteTaskboard(groupId, taskboard.id);\n    } catch (err) {\n      console.log(\"An error occured when deleting the taskboard\", err);\n    }\n  };\n\n  const saveNewTitle = async (e) => {\n    e.preventDefault();\n    if (!taskboard.id || !newTitleText) return;\n    try {\n      await updateTaskboard(groupId, taskboard.id, {\n        name: newTitleText,\n      });\n      setTitleText(newTitleText);\n      stopEditing();\n    } catch (err) {\n      console.log(\"An error occurred when saving new title\", err);\n    }\n  };\n  const startEditing = () => {\n    setNewTitleText(titleText);\n    setIsEditingTitle(true);\n  };\n  const stopEditing = () => {\n    setIsEditingTitle(false);\n  };\n\n  return (\n    <div className=\"taskboard-navbar-lockup\">\n      {isEditingTitle ? (\n        <form onSubmit={saveNewTitle}>\n          <input onChange={handleTitleChange} value={newTitleText} />\n\n          <div className=\"button-lockup\">\n            <Button type=\"submit\">\n              <FontAwesomeIcon icon={faCheckCircle} size=\"1x\" />\n            </Button>\n            <Button onClick={stopEditing}>\n              <FontAwesomeIcon icon={faTimesCircle} size=\"1x\" />\n            </Button>\n          </div>\n        </form>\n      ) : (\n        <>\n          <Typography variant=\"h5\">{titleText}</Typography>\n          <div className=\"button-lockup\">\n            <Button onClick={startEditing}>\n              <FontAwesomeIcon icon={faEdit} size=\"1x\" />\n            </Button>\n          </div>\n        </>\n      )}\n      <div className=\"right-lockup\">\n        <Button onClick={handleDeleteTaskboard}>Delete Taskboard</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskboardNavbar;\n","export const readUrlQueryParam = (key) => {\n  const params = new URLSearchParams(window.location.hash.split(\"?\")[1]);\n  return params.get(key);\n};\n\nexport const isEmptyObj = (obj) => {\n  return Object.keys(obj).length === 0;\n};\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Taskboard.scss\";\nimport TaskColumn from \"../Presentational/TaskColumn/TaskColumn\";\nimport NewTaskColumn from \"../Presentational/NewTaskColumn/NewTaskColumn\";\nimport TaskboardNavbar from \"../Presentational/TaskboardNavbar/TaskboardNavbar\";\nimport { db } from \"../../services/firebase\";\nimport { readUrlQueryParam, isEmptyObj } from \"../../helpers/utils\";\nimport { Typography } from \"@material-ui/core\";\nimport { auth } from \"../../services/firebase\";\n\nconst Taskboard = () => {\n  const [taskboardData, setTaskboardData] = React.useState({});\n  const [isBoardLoaded, setIsBoardLoaded] = React.useState(false);\n  const [columns, setColumns] = React.useState([]);\n  const [readError, setReadError] = React.useState(false); // TODO: use this\n  const [user, setUser] = React.useState(null);\n  const groupId = localStorage.getItem(\"groupId\");\n\n  useEffect(() => {\n    const boardId = readUrlQueryParam(\"id\");\n    try {\n      db.ref(`/taskboards/${groupId}/${boardId}`).on(\"value\", (snapshot) => {\n        const result = snapshot.val();\n        if (!result) {\n          setTaskboardData({});\n          setIsBoardLoaded(true);\n          return;\n        }\n        setTaskboardData({\n          id: snapshot.key,\n          ...result,\n        });\n        setIsBoardLoaded(true);\n      });\n    } catch (err) {\n      console.log(\"An error occurred when getting taskboard data\", err);\n      setTaskboardData({});\n      setIsBoardLoaded(true);\n    }\n\n    return () => db.ref(`/taskboards/${groupId}/${boardId}`).off(\"value\");\n  }, [groupId]);\n\n  useEffect(() => {\n    if (isEmptyObj(taskboardData)) return;\n    setUser(auth().currentUser);\n    try {\n      db.ref(`columns/${taskboardData.id}`).on(\"value\", (snapshot) => {\n        const tmpCols = [];\n        snapshot.forEach((col) => {\n          const val = col.val();\n          if (val.deletedTimestamp) return; // Don't display deleted columns\n          tmpCols.push({\n            id: col.key,\n            ...val,\n          });\n        });\n        setColumns(tmpCols);\n        setReadError(false);\n      });\n    } catch (err) {\n      setReadError(true);\n      console.error(`An error occurred when reading data... ${err.message}`); // TODO: Dont use an alert, do this properly...\n    }\n    return () => db.ref(`columns/${taskboardData.id}`).off(\"value\");\n  }, [taskboardData]);\n\n  console.log(\"Readerror is \", readError); // Just keeping this here until we look at using readError\n  if (isBoardLoaded && isEmptyObj(taskboardData)) {\n    return (\n      <div className=\"taskboard-error-lockup\">\n        <Typography variant=\"h5\">Taskboard does not exist</Typography>\n        <Link to=\"chat\">Go back to Home Page</Link>\n      </div>\n    );\n  }\n  return (\n    <div id=\"taskboard-container\">\n      <TaskboardNavbar groupId={groupId} taskboard={taskboardData} />\n      <div className=\"taskboard-canvas\">\n        {isBoardLoaded ? (\n          <div className=\"taskboard\">\n            {columns.map((column) => {\n              return (\n                <TaskColumn\n                  key={column.id}\n                  boardId={taskboardData.id}\n                  column={column}\n                  user={user}\n                  onDragOver={(e) => e.preventDefault()}\n                />\n              );\n            })}\n            <NewTaskColumn boardId={taskboardData.id} />\n          </div>\n        ) : (\n          <div className=\"loading-lockup\">\n            <div className=\"spinner-border text-success\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Taskboard;\n","import React, { Component } from \"react\";\nimport \"./Profile.scss\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { db } from \"../../services/firebase\";\nimport { auth } from \"../../services/firebase\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons/faTimes\";\nimport { storage } from \"../../services/firebase\";\n\nclass Text extends Component {\n  render() {\n    var text = this.props.text || \"\";\n    return <div>{text}</div>;\n  }\n}\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: auth().currentUser,\n      email: null,\n      username: null,\n      photoUrl: null,\n      readError: null,\n      writeError: null,\n      image: null,\n      progress: 0,\n      usernameEditable: false,\n      emailEditable: false,\n      passwordEditable: false,\n      photoEditable: false,\n      error: null,\n    };\n    this.handleUsernameChange = this.handleUsernameChange.bind(this);\n    this.handleUsernameCancel = this.handleUsernameCancel.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleEmailCancel = this.handleEmailCancel.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handlePasswordCancel = this.handlePasswordCancel.bind(this);\n    this.handlePhotoChange = this.handlePhotoChange.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleimageChange = this.handleimageChange.bind(this);\n    this.handlePhotoStateChange = this.handlePhotoStateChange.bind(this);\n  }\n\n  async writeUserData(userId, name, email) {\n    try {\n      await db.ref(\"users/\" + userId).update({\n        email: email,\n        name: name,\n      });\n      this.refreshUserDetails();\n      return true;\n    } catch (error) {\n      this.refreshUserDetails();\n      return false;\n    }\n  }\n\n  //Username Callback\n  handleUsernameCancel(e) {\n    e.preventDefault();\n    this.setState({\n      usernameTemp: \"\",\n      usernameEditable: !this.state.usernameEditable,\n    });\n  }\n  async handleUsernameChange(e) {\n    e.preventDefault();\n    if (this.state.usernameEditable) {\n      if (\n        typeof this.state.usernameTemp !== \"undefined\" &&\n        this.state.usernameTemp !== \"\"\n      ) {\n        try {\n          var success = await this.writeUserData(\n            this.state.user.uid,\n            this.state.usernameTemp,\n            this.state.email\n          );\n\n          if (success) {\n            this.setState({\n              error: \"Successfully changed Username\",\n            });\n          } else {\n            throw new Error(\"Could not set Username, try again later.\");\n          }\n        } catch (error) {\n          console.log(error);\n          this.setState({\n            error: error,\n          });\n        }\n        this.setState({ usernameTemp: \"\" });\n      } else {\n        this.setState({\n          error: \"Username cannot be empty.\",\n        });\n      }\n    }\n    this.setState({\n      usernameEditable: !this.state.usernameEditable,\n    });\n  }\n  handleimageChange = (e) => {\n    if (e.target.files[0]) {\n      const image = e.target.files[0];\n      this.setState(() => ({ image }));\n    }\n  };\n  handlePhotoChange = () => {\n    const { image } = this.state;\n    const uploadTask = storage\n      .ref(\"ProfilePhoto/\" + this.state.user.uid)\n      .put(image);\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        // progrss function ....\n        const progress = Math.round(\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        );\n        this.setState({ progress });\n      },\n      (error) => {\n        // error function ....\n        console.log(error);\n      },\n      async () => {\n        // complete function ....\n        await storage\n          .ref(\"ProfilePhoto\")\n          .child(this.state.user.uid)\n          .getDownloadURL()\n          .then((url) => {\n            this.setState({\n              url: url,\n              error: \"The profile image was uploaded successfully.\",\n            });\n          });\n        await db.ref(`users/${this.state.user.uid}`).update({\n          profilePic: this.state.url,\n        });\n      }\n    );\n  };\n  //Email Callback\n  handleEmailCancel(e) {\n    e.preventDefault();\n    this.setState({\n      emailTemp: \"\",\n      emailEditable: !this.state.emailEditable,\n    });\n  }\n  async handleEmailChange(e) {\n    e.preventDefault();\n    if (this.state.emailEditable) {\n      if (\n        typeof this.state.emailTemp !== \"undefined\" &&\n        this.state.emailTemp !== \"\"\n      ) {\n        try {\n          await this.state.user.updateEmail(this.state.emailTemp);\n          this.writeUserData(\n            this.state.user.uid,\n            this.state.username,\n            this.state.emailTemp\n          );\n          this.setState({\n            error: \"Successfully changed Email.\",\n          });\n        } catch (error) {\n          this.setState({\n            error: error.message + \" Email was not changed.\",\n          });\n          console.log(error);\n        }\n\n        this.setState({ emailTemp: \"\" });\n      } else {\n        this.setState({\n          error: \"Email cannot be empty.\",\n        });\n      }\n    }\n\n    this.setState({\n      emailEditable: !this.state.emailEditable,\n    });\n  }\n\n  //Password Callback\n  handlePasswordCancel(e) {\n    e.preventDefault();\n    this.setState({\n      passwordEditable: !this.state.passwordEditable,\n    });\n  }\n  async handlePasswordChange(e) {\n    e.preventDefault();\n\n    if (this.state.passwordEditable) {\n      if (\n        typeof this.state.passwordTemp !== \"undefined\" &&\n        this.state.passwordTemp !== \"\"\n      ) {\n        if (this.state.passwordTemp === this.state.confirmPassTemp) {\n          try {\n            await this.state.user.updatePassword(this.state.passwordTemp);\n            this.setState({\n              error: \"Successfully changed Password.\",\n            });\n          } catch (error) {\n            console.log(error);\n            var errorMessage = error.message + \". Password was not changed.\";\n            this.setState({\n              error: errorMessage,\n            });\n          }\n        } else {\n          this.setState({\n            error: \"Password and Confirmation fields aren't equal.\",\n          });\n          console.log(\"Both fields aren't equal.\");\n        }\n      } else {\n        this.setState({\n          error: \"Password cannot be empty\",\n        });\n        console.log(\"Password cannot be empty\");\n      }\n    }\n    this.setState({\n      passwordTemp: \"\",\n      passwordEditable: !this.state.passwordEditable,\n    });\n  }\n\n  //Store the value in a temp variable when textInput changes\n  handleChange(evt, name) {\n    const text = evt.target.value;\n    this.setState(() => ({ [name]: text }));\n  }\n  handlePhotoStateChange(e) {\n    e.preventDefault();\n    this.setState({\n      photoEditable: !this.state.photoEditable,\n    });\n  }\n  //Refreshes the user details by pulling new data from the database\n\n  refreshUserDetails() {\n    this.setState({ readError: null });\n\n    try {\n      db.ref(`users/${this.state.user.uid}`).once(\"value\", (snapshot) => {\n        this.setState({\n          email: snapshot.val().email,\n          username: snapshot.val().name ? snapshot.val().name : null,\n        });\n      });\n      storage\n        .ref(\"ProfilePhoto\")\n        .child(this.state.user.uid)\n        .getDownloadURL()\n        .then((url) => {\n          console.log(url);\n          this.setState({ url });\n        });\n    } catch (error) {\n      this.setState({ readError: error.message });\n    }\n  }\n\n  componentDidMount() {\n    this.refreshUserDetails();\n  }\n\n  render() {\n    var usernameTextRender,\n      emailTextRender,\n      passwordTextRender,\n      crossRender,\n      errorText,\n      confirmPassword,\n      passwordConfirmTextbox,\n      photo,\n      photoRender;\n    crossRender = <FontAwesomeIcon icon={faTimes} aria-hidden=\"true\" />;\n    errorText = <Text text={this.state.error} />;\n    confirmPassword = \"CONFIRM PASSWORD\";\n\n    //username\n    if (this.state.usernameEditable) {\n      usernameTextRender = (\n        <div>\n          <TextField\n            style={{\n              fontSize: 16,\n              height: 35,\n              borderColor: \"gray\",\n              borderWidth: 1,\n              width: \"95%\",\n            }}\n            defaultValue={this.state.username}\n            onChange={(event) => this.handleChange(event, \"usernameTemp\")}\n          />\n        </div>\n      );\n    } else {\n      usernameTextRender = (\n        <div>\n          <Text text={this.state.username} />\n        </div>\n      );\n    }\n\n    //Email\n    if (this.state.emailEditable) {\n      emailTextRender = (\n        <div>\n          <TextField\n            style={{\n              fontSize: 16,\n              height: 35,\n              borderColor: \"gray\",\n              borderWidth: 1,\n              width: \"95%\",\n            }}\n            defaultValue={this.state.email}\n            onChange={(event) => this.handleChange(event, \"emailTemp\")}\n          />\n        </div>\n      );\n    } else {\n      emailTextRender = (\n        <div>\n          <Text text={this.state.email} />\n        </div>\n      );\n    }\n\n    //Password\n    if (this.state.passwordEditable) {\n      passwordTextRender = (\n        <div>\n          <TextField\n            style={{\n              fontSize: 16,\n              height: 35,\n              borderColor: \"gray\",\n              borderWidth: 1,\n              marginBottom: 5,\n              marginTop: 5,\n              width: \"95%\",\n            }}\n            type=\"password\"\n            onChange={(event) => this.handleChange(event, \"passwordTemp\")}\n          />\n        </div>\n      );\n      passwordConfirmTextbox = (\n        <div>\n          <TextField\n            style={{\n              fontSize: 16,\n              height: 35,\n              borderColor: \"gray\",\n              borderWidth: 1,\n              marginBottom: 5,\n              marginTop: 5,\n              width: \"95%\",\n            }}\n            type=\"password\"\n            onChange={(event) => this.handleChange(event, \"confirmPassTemp\")}\n          />\n        </div>\n      );\n      confirmPassword = (\n        <h3>\n          PASSWORD <br />\n          CONFIRM PASSWORD\n        </h3>\n      );\n    } else {\n      passwordTextRender = (\n        <div>\n          <Text\n            style={{\n              marginBottom: 5,\n              marginTop: 5,\n            }}\n            text=\"************\"\n          />\n        </div>\n      );\n      passwordConfirmTextbox = \"\";\n      confirmPassword = <h3>PASSWORD</h3>;\n    }\n    //Profile photo\n    if (this.state.photoEditable) {\n      photoRender = (\n        <div>\n          <progress value={this.state.progress} max=\"100\" />\n          <br />\n          <input type=\"file\" onChange={this.handleimageChange} />\n          <button onClick={this.handlePhotoChange}>Upload</button>\n          <br />\n        </div>\n      );\n    } else {\n      photoRender = (\n        <div className=\"content\">\n          <h4>Add a photo to personalise your account</h4>\n        </div>\n      );\n    }\n\n    if (this.state.url != null) {\n      photo = (\n        <img\n          className=\"photo-icon\"\n          src={this.state.url}\n          alt=\"Uploaded images\"\n        />\n      );\n    } else {\n      photo = (\n        <div className=\"name-icon\">\n          {this.state.username != null ? this.state.username.charAt(0) : \"\"}\n        </div>\n      );\n    }\n\n    return (\n      <div id=\"profile\">\n        <div className=\"content-wrap\">\n          {photo}\n          <h1>\n            Welcome,{\" \"}\n            {this.state.username != null\n              ? this.state.username\n              : this.state.email}\n          </h1>\n          <h2>Manage your information to make Chat App work better for you</h2>\n          <div className=\"card\">\n            <div className=\"inner-heading\">Profile</div>\n            <div className=\"info\">\n              <h3>PHOTO</h3>\n              <div className=\"content\">{photoRender}</div>\n              <div className=\"icon\" onClick={this.handlePhotoStateChange}>\n                {photo}\n                <div className=\"photo\">\n                  <svg\n                    data-v-d223ba98=\"\"\n                    aria-hidden=\"true\"\n                    focusable=\"false\"\n                    data-prefix=\"fas\"\n                    data-icon=\"camera\"\n                    role=\"img\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 512 512\"\n                    className=\"svg-inline--fa fa-camera fa-w-16\"\n                    style={{ fontSize: \"17px\" }}\n                  >\n                    <path\n                      data-v-d223ba98=\"\"\n                      fill=\"currentColor\"\n                      d=\"M512 144v288c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V144c0-26.5 21.5-48 48-48h88l12.3-32.9c7-18.7 24.9-31.1 44.9-31.1h125.5c20 0 37.9 12.4 44.9 31.1L376 96h88c26.5 0 48 21.5 48 48zM376 288c0-66.2-53.8-120-120-120s-120 53.8-120 120 53.8 120 120 120 120-53.8 120-120zm-32 0c0 48.5-39.5 88-88 88s-88-39.5-88-88 39.5-88 88-88 88 39.5 88 88z\"\n                      className=\"\"\n                    ></path>\n                  </svg>\n                </div>\n              </div>\n            </div>\n            <div className=\"info\">\n              <h3>EMAIL</h3>\n              <div className=\"content\">{emailTextRender}</div>\n              <div onClick={this.handleEmailCancel}>\n                <b>{this.state.emailEditable ? crossRender : \"\"}</b>\n              </div>\n              <div className=\"popup\" onClick={this.handleEmailChange}>\n                <svg\n                  data-v-d223ba98=\"\"\n                  aria-hidden=\"true\"\n                  focusable=\"false\"\n                  data-prefix=\"fas\"\n                  data-icon=\"close\"\n                  role=\"img\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 512 512\"\n                  className=\"svg-inline--fa fa-close fa-w-16\"\n                >\n                  <path\n                    data-v-d223ba98=\"\"\n                    fill=\"currentColor\"\n                    d=\"M290.74 93.24l128.02 128.02-277.99 277.99-114.14 12.6C11.35 513.54-1.56 500.62.14 485.34l12.7-114.22 277.9-277.88zm207.2-19.06l-60.11-60.11c-18.75-18.75-49.16-18.75-67.91 0l-56.55 56.55 128.02 128.02 56.55-56.55c18.75-18.76 18.75-49.16 0-67.91z\"\n                    className=\"\"\n                  ></path>\n                </svg>\n              </div>\n            </div>\n            <div className=\"info\">\n              <h3>USERNAME</h3>\n              <div className=\"content\">{usernameTextRender}</div>\n              <div onClick={this.handleUsernameCancel}>\n                <b>{this.state.usernameEditable ? crossRender : \"\"}</b>\n              </div>\n              <div className=\"popup\" onClick={this.handleUsernameChange}>\n                <svg\n                  data-v-d223ba98=\"\"\n                  aria-hidden=\"true\"\n                  focusable=\"false\"\n                  data-prefix=\"fas\"\n                  data-icon=\"pen\"\n                  role=\"img\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 512 512\"\n                  className=\"svg-inline--fa fa-pen fa-w-16\"\n                >\n                  <path\n                    data-v-d223ba98=\"\"\n                    fill=\"currentColor\"\n                    d=\"M290.74 93.24l128.02 128.02-277.99 277.99-114.14 12.6C11.35 513.54-1.56 500.62.14 485.34l12.7-114.22 277.9-277.88zm207.2-19.06l-60.11-60.11c-18.75-18.75-49.16-18.75-67.91 0l-56.55 56.55 128.02 128.02 56.55-56.55c18.75-18.76 18.75-49.16 0-67.91z\"\n                    className=\"\"\n                  ></path>\n                </svg>\n              </div>\n            </div>\n            <div className=\"info\" style={{ borderBottom: \"none\" }}>\n              {confirmPassword}\n              <div className=\"content\">\n                <div className=\"content\" type=\"password\">\n                  {passwordTextRender}\n                  {passwordConfirmTextbox}\n                </div>\n              </div>\n              <div onClick={this.handlePasswordCancel}>\n                <b>{this.state.passwordEditable ? crossRender : \"\"}</b>\n              </div>\n              <div className=\"popup\" onClick={this.handlePasswordChange}>\n                <svg\n                  data-v-d223ba98=\"\"\n                  aria-hidden=\"true\"\n                  focusable=\"false\"\n                  data-prefix=\"fas\"\n                  data-icon=\"pen\"\n                  role=\"img\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 512 512\"\n                  className=\"svg-inline--fa fa-pen fa-w-16\"\n                >\n                  <path\n                    data-v-d223ba98=\"\"\n                    fill=\"currentColor\"\n                    d=\"M290.74 93.24l128.02 128.02-277.99 277.99-114.14 12.6C11.35 513.54-1.56 500.62.14 485.34l12.7-114.22 277.9-277.88zm207.2-19.06l-60.11-60.11c-18.75-18.75-49.16-18.75-67.91 0l-56.55 56.55 128.02 128.02 56.55-56.55c18.75-18.76 18.75-49.16 0-67.91z\"\n                    className=\"\"\n                  ></path>\n                </svg>\n              </div>\n            </div>\n          </div>\n          <div>{errorText}</div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Profile;\n","import React, { Component } from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nimport { auth } from \"./services/firebase\";\n\nimport Navbar from \"./Components/Navbar\";\n// import Home from \"./Components/Pages/Home\";\n// import Register from \"./Components/Pages/Register\";\nimport Login from \"./Components/Pages/Login\";\nimport Chat from \"./Components/Pages/Chat\";\nimport Taskboard from \"./Components/Pages/Taskboard\";\nimport Profile from \"./Components/Pages/Profile\";\nimport \"./App.scss\";\n\nfunction PublicRoute({ component: Component, authenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        authenticated === false ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/chat\" />\n        )\n      }\n    />\n  );\n}\n\nfunction PrivateRoute({ component: Component, authenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        authenticated === true ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{ pathname: \"/login\", state: { from: props.location } }}\n          />\n        )\n      }\n    />\n  );\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      authenticated: false,\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({\n          authenticated: true,\n          loading: false,\n        });\n      } else {\n        this.setState({\n          authenticated: false,\n          loading: false,\n        });\n      }\n    });\n  }\n\n  render() {\n    return this.state.loading === true ? (\n      <div\n        className=\"spinner-border text-success\"\n        role=\"status\"\n        style={{\n          position: \"absolute\",\n          left: \"50%\",\n          top: \"50%\",\n        }}\n      >\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    ) : (\n      <div className=\"App\">\n        <Router basename=\"/\">\n          <Navbar authenticated={this.state.authenticated} />\n          <Switch>\n            <PrivateRoute\n              path=\"/chat\"\n              authenticated={this.state.authenticated}\n              component={Chat}\n            />\n            <PublicRoute\n              path=\"/login\"\n              authenticated={this.state.authenticated}\n              component={Login}\n            />\n            <PrivateRoute\n              path=\"/profile\"\n              authenticated={this.state.authenticated}\n              component={Profile}\n            />\n            <PrivateRoute\n              path=\"/taskboard\"\n              authenticated={this.state.authenticated}\n              component={Taskboard}\n            />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport \"./variables.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/icon.b5d56f8d.png\";"],"sourceRoot":""}